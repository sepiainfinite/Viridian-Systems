{
  "custom": {
    "tagPath": ""
  },
  "params": {
    "ac": -1,
    "compressor": -1,
    "editable": false,
    "highThreshold": "",
    "index": "",
    "lowThreshold": "",
    "mappings": [],
    "name": "",
    "nameOverride": "",
    "numberFormat": "",
    "path": "",
    "type": "",
    "units": "",
    "widgetDimensions": {
      "height": "",
      "width": ""
    }
  },
  "propConfig": {
    "custom.tagPath": {
      "binding": {
        "config": {
          "struct": {
            "compressor": "{view.params.compressor}",
            "path": "{view.params.path}"
          },
          "waitOnAll": true
        },
        "transforms": [
          {
            "code": "\t# If the user selected a path that should contain a compressor number in it,\n\t# then this transform adds the compressor number to the path.\n\n\tcompressor \u003d value[\u0027compressor\u0027]\n\tpath \u003d value[\u0027path\u0027]\n\t\n\tif compressor \u003d\u003d -1:\n\t\treturn path\n\telse:\n\t\t# Path should contain compressor number.\n\t\t# Example: [default]BMS/Blue/HVAC/AC1/Comp1/HMI_HOA\n\t\tif len(path) \u003e 0 and \u0027Comp\u0027 in path:\n\t\t\tpathParts \u003d path.split(\u0027/\u0027)\n\t\t\tnewPath \u003d \u0027\u0027\n\t\t\ti \u003d 0\n\t\t\tfor part in pathParts:\n\t\t\t\tif i !\u003d 3:\n\t\t\t\t\tnewPath \u003d newPath + part + \u0027/\u0027\n\t\t\t\telse:\n\t\t\t\t\tnewPath \u003d newPath + \u0027Comp\u0027 + str(compressor) + \u0027/\u0027\n\t\t\t\ti \u003d i + 1\n\t\t\t\t\n\t\t\treturn newPath[:-1]\n\t\telse:\n\t\t\treturn path\n\t",
            "type": "script"
          }
        ],
        "type": "expr-struct"
      },
      "persistent": true
    },
    "custom.tagValue": {
      "persistent": true
    },
    "params.ac": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.compressor": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.editable": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.highThreshold": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.index": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.lowThreshold": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.mappings": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.name": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.nameOverride": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.numberFormat": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.path": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.tagInfo": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.type": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.units": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.widgetDimensions": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 43,
      "width": 326
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "Name"
        },
        "position": {
          "basis": "50%",
          "grow": 1,
          "shrink": 0
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "struct": {
                  "ahu": "{view.params.ahu}",
                  "compressorNum": "{view.params.compressor}",
                  "name": "{view.params.name}",
                  "nameOverride": "{view.params.nameOverride}",
                  "path": "{view.params.path}",
                  "type": "{view.params.type}"
                },
                "waitOnAll": true
              },
              "transforms": [
                {
                  "code": "\t# If the user has not specified a name for the tag, then utilize the\n\t# other params to create a name for the tag.\n\t\n\tif value[\u0027nameOverride\u0027] !\u003d \u0027\u0027:\n\t\treturn value[\u0027nameOverride\u0027]\n\telse:\n\t\ttypeMap \u003d {\u0027\u0027:\u0027\u0027,\u0027fan\u0027:\u0027Fan\u0027, \u0027condenser\u0027:\u0027Condenser\u0027, \u0027economizer\u0027:\u0027Economizer\u0027,\u0027compressor\u0027:\u0027Compressor\u0027,\u0027heatingControls\u0027:\u0027Heating Controls\u0027,\u0027other\u0027:\u0027\u0027}\n\t\t\n\t\tahu \u003d value[\u0027ahu\u0027]\n\t\ttype \u003d value[\u0027type\u0027]\n\t\tname \u003d value[\u0027name\u0027]\n\t\tpath \u003d value[\u0027path\u0027]\n\t\t\n\t\tif ahu \u003d\u003d -1:\n\t\t\tahu \u003d \u0027\u0027\n\t\telse:\n\t\t\tahu \u003d \u0027AHU \u0027 + str(ahu) + \u0027 - \u0027\n\t\t\n\t\tif type \u003d\u003d \u0027compressor\u0027 and \u0027Comp\u0027 in path:\n\t\t\ttypeName \u003d \u0027Compressor \u0027 + str(value[\u0027compressorNum\u0027]) + \u0027 \u0027 + name\n\t\telif type \u003d\u003d \u0027other\u0027:\n\t\t\ttypeName \u003d name\n\t\telse:\n\t\t\ttypeName \u003d typeMap[type] + \u0027 \u0027 + name\n\t\t\n\t\treturn ahu + typeName",
                  "type": "script"
                }
              ],
              "type": "expr-struct"
            }
          }
        },
        "props": {
          "style": {
            "classes": "building-automation-demo/page/systems-overview/framework/dashboard/widgets/multi-status/general-hover",
            "fontSize": "14px",
            "paddingLeft": "10px",
            "transition": "color 0.25s linear"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Edit"
        },
        "position": {
          "basis": "20px"
        },
        "props": {
          "elements": [
            {
              "d": "M0 0h24v24H0z",
              "fill": {
                "paint": "none"
              },
              "name": "path",
              "type": "path"
            },
            {
              "d": "M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z",
              "name": "path",
              "type": "path"
            }
          ],
          "style": {
            "cursor": "pointer",
            "marginRight": "10px",
            "pointer-events": "none",
            "transition": "fill 0.25s linear"
          },
          "viewBox": "0 0 24 24"
        },
        "type": "ia.shapes.svg"
      }
    ],
    "events": {
      "dom": {
        "onClick": {
          "config": {
            "script": "\t# Create the params that will be used to populate \u0027config tag\u0027 panel.\n\tparams \u003d {\n\t\t\"ac\": self.view.params.ac,\n\t\t\"compressor\": self.view.params.compressor,\n\t\t\"highThreshold\": self.view.params.highThreshold,\n\t\t\"lowThreshold\": self.view.params.lowThreshold,\n\t\t\"mappings\": self.view.params.mappings,\n\t\t\"name\": self.view.params.name,\n\t\t\"nameOverride\": self.view.params.nameOverride,\n\t\t\"numberFormat\": self.view.params.numberFormat,\n\t\t\"path\": self.view.params.path,\n\t\t\"units\": self.view.params.units,\n\t    \"type\": self.view.params.type,\n\t    \"index\":self.view.params.index,\n\t    \"editable\":self.view.params.editable\n\t}\n\t\n\t# Send message to \u0027edit\u0027 message handler, which will populate the \u0027config tag\u0027\n\t# panel with these params being seny in the payload (and will make the \u0027config\n\t# tag\u0027 panel visible).\n\tsystem.perspective.sendMessage(\u0027edit\u0027, payload \u003d {\u0027params\u0027:params}, scope \u003d \u0027page\u0027)"
          },
          "scope": "G",
          "type": "script"
        }
      }
    },
    "meta": {
      "name": "root"
    },
    "props": {
      "style": {
        "classes": "building-automation-demo/page/systems-overview/framework/dashboard/widgets/multi-status/general-hover"
      }
    },
    "type": "ia.container.flex"
  }
}