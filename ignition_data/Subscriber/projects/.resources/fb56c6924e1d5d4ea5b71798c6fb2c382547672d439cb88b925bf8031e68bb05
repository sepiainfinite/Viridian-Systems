{
  "custom": {},
  "params": {
    "defaultID": -1,
    "inEditDash": false,
    "inSettings": false,
    "newDash": false
  },
  "propConfig": {
    "params.defaultID": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.inEditDash": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.inSettings": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.newDash": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 365,
      "width": 220
    }
  },
  "root": {
    "children": [
      {
        "children": [
          {
            "meta": {
              "name": "Collapse"
            },
            "position": {
              "basis": "23px",
              "shrink": 0
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "path": "parent.custom.expanded"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "elements": [
                {
                  "d": "M0 0h24v24H0z",
                  "fill": {
                    "paint": "none"
                  },
                  "name": "path",
                  "type": "path"
                },
                {
                  "d": "M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z",
                  "name": "path",
                  "type": "path"
                }
              ],
              "viewBox": "0 0 24 24"
            },
            "type": "ia.shapes.svg"
          },
          {
            "meta": {
              "name": "Expand"
            },
            "position": {
              "basis": "23px",
              "shrink": 0
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "!{parent.custom.expanded}"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "elements": [
                {
                  "d": "M0 0h24v24H0z",
                  "fill": {
                    "paint": "none"
                  },
                  "name": "path",
                  "type": "path"
                },
                {
                  "d": "M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z",
                  "name": "path",
                  "type": "path"
                }
              ],
              "viewBox": "0 0 24 24"
            },
            "type": "ia.shapes.svg"
          },
          {
            "meta": {
              "name": "Public Title"
            },
            "position": {
              "basis": "200px",
              "grow": 1
            },
            "props": {
              "style": {
                "fontSize": "12px",
                "fontWeight": "bold"
              },
              "text": "Public Dashboards"
            },
            "type": "ia.display.label"
          }
        ],
        "custom": {
          "expanded": true
        },
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\tself.custom.expanded \u003d not self.custom.expanded"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Public Dash Title Cont"
        },
        "position": {
          "basis": "30px",
          "shrink": 0
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "{session.props.auth.authenticated}"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "borderBottomColor": "--neutral-40",
            "borderBottomStyle": "solid",
            "borderBottomWidth": "0.1px",
            "borderLeftColor": "--neutral-70",
            "borderLeftStyle": "none",
            "borderLeftWidth": "0.15px",
            "borderRightColor": "--neutral-70",
            "borderRightStyle": "none",
            "borderRightWidth": "0.15px",
            "borderTopColor": "--neutral-40",
            "borderTopStyle": "solid",
            "borderTopWidth": "0.1px",
            "classes": "building-automation-demo/page/systems-overview/framework/dashboard/select-dashboard/select-dashboard/section-bar",
            "marginTop": "10px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "Public Dashboards"
        },
        "position": {
          "shrink": 0
        },
        "propConfig": {
          "position.basis": {
            "binding": {
              "config": {
                "expression": "toStr(len({this.props.instances}) * 43) + \u0027px\u0027"
              },
              "type": "expr"
            }
          },
          "position.display": {
            "binding": {
              "config": {
                "expression": "if(len({this.props.instances}) \u003d 0,false,if({../Public Dash Title Cont.custom.expanded}\u003dtrue,true,false))"
              },
              "type": "expr"
            }
          },
          "props.instances": {
            "binding": {
              "config": {
                "struct": {
                  "currentID": "{session.custom.dashboard.objects.current.id}",
                  "dashboards": "{session.custom.dashboard.dashboards.dashboards}",
                  "defaultID": "{view.params.defaultID}",
                  "inEditDash": "{view.params.inEditDash}",
                  "inSettings": "{view.params.inSettings}",
                  "newDash": "{view.params.newDash}"
                },
                "waitOnAll": true
              },
              "transforms": [
                {
                  "code": "\t# Create the list of instances for the dashboard list, either utilizing the ID of the current\n\t# dashboard or the params.defaultID (user\u0027s default dashboard) to make sure that the current \n\t# dashboard appears \u0027selected\u0027. If newDash is true, then that means that a new dashboard is\n\t# being created; and if the \u0027select dashboard\u0027 dropdown is used, should not show a selected\n\t# dashboard (hence, setting id to -1).\n\t\n\tif value[\u0027newDash\u0027] \u003d\u003d True:\n\t\tid \u003d -1\n\telif value[\u0027inSettings\u0027] \u003d\u003d False:\n\t\tid \u003d value[\u0027currentID\u0027]\n\telse:\n\t\tid \u003d value[\u0027defaultID\u0027]\n\t\t\n\tdashboards \u003d value[\u0027dashboards\u0027]\n\toptions \u003d []\n\t\n\tfor x in range(0,len(dashboards)):\n\t\tdashboard \u003d dashboards[x]\n\t\tif dashboard.public \u003d\u003d True:\n\t\t\tif dashboard.id \u003d\u003d id:\n\t\t\t\tselected \u003d True\n\t\t\telse:\n\t\t\t\tselected \u003d False\n\t\t\t\n\t\t\t# For each instance, include dashboard name, dashboard author, and the\n\t\t\t# dashboard url (when clicking/pressing on the instance, url is utilized\n\t\t\t# to switch to that dashboard).\n\t\t\tname \u003d dashboard.name\n\t\t\tcreatedBy \u003d dashboard.username\n\t\t\turl \u003d dashboard.url\n\t\t\t\n\t\t\tobj \u003d {\n\t\t\t  \"instanceStyle\": {\n\t\t\t    \"classes\": \"\"\n\t\t\t  },\n\t\t\t  \"instancePosition\": {},\n\t\t\t  \"createdBy\": createdBy,\n\t\t\t  \"inSettings\": value[\u0027inSettings\u0027],\n\t\t\t  \"inEditDash\": value[\u0027inEditDash\u0027],\n\t\t\t  \"name\": name,\n\t\t\t  \"selected\": selected,\n\t\t\t  \"url\": url,\n\t\t\t  \"id\": dashboard.id\n\t\t\t}\n\t\t\t\n\t\t\toptions.append(obj)\n\t\t\t\n\treturn options",
                  "type": "script"
                }
              ],
              "type": "expr-struct"
            }
          }
        },
        "props": {
          "direction": "column",
          "elementPosition": {
            "basis": "auto",
            "grow": 0,
            "shrink": 0
          },
          "elementStyle": {
            "borderRadius": "3px",
            "marginLeft": "10px",
            "marginRight": "10px"
          },
          "path": "Building Automation Demo/Page/Systems Overview/Framework/Dashboard/Select Dashboard/Dashboard Row",
          "style": {
            "marginBottom": "10px",
            "marginTop": "10px"
          },
          "useDefaultViewWidth": false
        },
        "type": "ia.display.flex-repeater"
      },
      {
        "meta": {
          "name": "No Public Dash Lbl"
        },
        "position": {
          "basis": "142.5px",
          "shrink": 0
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "if(len({../Public Dashboards.props.instances})\u003d0,true,false)"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "color": "--neutral-70",
            "fontSize": "12px",
            "textAlign": "center"
          },
          "text": "No Public Dashboards found."
        },
        "type": "ia.display.label"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Collapse"
            },
            "position": {
              "basis": "23px",
              "shrink": 0
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "path": "parent.custom.expanded"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "elements": [
                {
                  "d": "M0 0h24v24H0z",
                  "fill": {
                    "paint": "none"
                  },
                  "name": "path",
                  "type": "path"
                },
                {
                  "d": "M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z",
                  "name": "path",
                  "type": "path"
                }
              ],
              "viewBox": "0 0 24 24"
            },
            "type": "ia.shapes.svg"
          },
          {
            "meta": {
              "name": "Expand"
            },
            "position": {
              "basis": "23px",
              "shrink": 0
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "expression": "!{parent.custom.expanded}"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "elements": [
                {
                  "d": "M0 0h24v24H0z",
                  "fill": {
                    "paint": "none"
                  },
                  "name": "path",
                  "type": "path"
                },
                {
                  "d": "M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z",
                  "name": "path",
                  "type": "path"
                }
              ],
              "viewBox": "0 0 24 24"
            },
            "type": "ia.shapes.svg"
          },
          {
            "meta": {
              "name": "Private Title"
            },
            "position": {
              "basis": "200px",
              "grow": 1
            },
            "props": {
              "style": {
                "fontSize": "12px",
                "fontWeight": "bold"
              },
              "text": "Private Dashboards"
            },
            "type": "ia.display.label"
          }
        ],
        "custom": {
          "expanded": true
        },
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\tself.custom.expanded \u003d not self.custom.expanded"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Private Dash Title Cont"
        },
        "position": {
          "basis": "30px",
          "shrink": 0
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "{session.props.auth.authenticated}"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "borderBottomColor": "--neutral-40",
            "borderBottomStyle": "solid",
            "borderBottomWidth": "0.1px",
            "borderLeftColor": "--neutral-70",
            "borderLeftStyle": "none",
            "borderLeftWidth": "0.15px",
            "borderRightColor": "--neutral-70",
            "borderRightStyle": "none",
            "borderRightWidth": "0.15px",
            "borderTopColor": "--neutral-40",
            "borderTopStyle": "solid",
            "borderTopWidth": "0.1px",
            "classes": "building-automation-demo/page/systems-overview/framework/dashboard/select-dashboard/select-dashboard/section-bar"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "Private Dashboards"
        },
        "position": {
          "shrink": 0
        },
        "propConfig": {
          "position.basis": {
            "binding": {
              "config": {
                "expression": "toStr(len({this.props.instances}) * 43) + \u0027px\u0027"
              },
              "type": "expr"
            }
          },
          "position.display": {
            "binding": {
              "config": {
                "struct": {
                  "authenticated": "{session.props.auth.authenticated}",
                  "expanded": "{../Private Dash Title Cont.custom.expanded}"
                },
                "waitOnAll": true
              },
              "transforms": [
                {
                  "code": "\tif value[\u0027authenticated\u0027]:\n\t\tif value[\u0027expanded\u0027]:\n\t\t\treturn True\n\t\telse:\n\t\t\treturn False\n\telse:\n\t\treturn False",
                  "type": "script"
                }
              ],
              "type": "expr-struct"
            }
          },
          "props.instances": {
            "binding": {
              "config": {
                "struct": {
                  "currentID": "{session.custom.dashboard.objects.current.id}",
                  "dashboards": "{session.custom.dashboard.dashboards.dashboards}",
                  "defaultID": "{view.params.defaultID}",
                  "inEditDash": "{view.params.inEditDash}",
                  "inSettings": "{view.params.inSettings}",
                  "newDash": "{view.params.newDash}"
                },
                "waitOnAll": true
              },
              "transforms": [
                {
                  "code": "\t# Create the list of instances for the dashboard list, either utilizing the ID of the current\n\t# dashboard or the params.defaultID (user\u0027s default dashboard) to make sure that the current \n\t# dashboard appears \u0027selected\u0027. If newDash is true, then that means that a new dashboard is\n\t# being created; and if the \u0027select dashboard\u0027 dropdown is used, should not show a selected\n\t# dashboard (hence, setting id to -1).\n\t\n\tif value[\u0027newDash\u0027] \u003d\u003d True:\n\t\tid \u003d -1\n\telif value[\u0027inSettings\u0027] \u003d\u003d False:\n\t\tid \u003d value[\u0027currentID\u0027]\n\telse:\n\t\tid \u003d value[\u0027defaultID\u0027]\n\t\t\n\tdashboards \u003d value[\u0027dashboards\u0027]\n\toptions \u003d []\n\t\n\tfor x in range(0,len(dashboards)):\n\t\tdashboard \u003d dashboards[x]\n\t\tif dashboard.public \u003d\u003d False:\n\t\t\tif dashboard.id \u003d\u003d id:\n\t\t\t\tselected \u003d True\n\t\t\telse:\n\t\t\t\tselected \u003d False\n\t\t\t\t\n\t\t\t# For each instance, include dashboard name, dashboard author, and the\n\t\t\t# dashboard url (when clicking/pressing on the instance, url is utilized\n\t\t\t# to switch to that dashboard).\t\n\t\t\tname \u003d dashboard.name\n\t\t\tcreatedBy \u003d dashboard.username\n\t\t\turl \u003d dashboard.url\n\t\t\t\n\t\t\tobj \u003d {\n\t\t\t  \"instanceStyle\": {\n\t\t\t    \"classes\": \"\"\n\t\t\t  },\n\t\t\t  \"instancePosition\": {},\n\t\t\t  \"createdBy\": createdBy,\n\t\t\t  \"inSettings\": value[\u0027inSettings\u0027],\n\t\t\t  \"inEditDash\": value[\u0027inEditDash\u0027],\n\t\t\t  \"name\": name,\n\t\t\t  \"selected\": selected,\n\t\t\t  \"url\": url,\n\t\t\t  \"id\": dashboard.id\n\t\t\t}\n\t\t\t\n\t\t\toptions.append(obj)\n\t\t\t\n\treturn options",
                  "type": "script"
                }
              ],
              "type": "expr-struct"
            }
          }
        },
        "props": {
          "direction": "column",
          "elementPosition": {
            "basis": "auto",
            "grow": 0,
            "shrink": 0
          },
          "elementStyle": {
            "borderRadius": "10px",
            "marginLeft": "10px",
            "marginRight": "10px"
          },
          "path": "Building Automation Demo/Page/Systems Overview/Framework/Dashboard/Select Dashboard/Dashboard Row",
          "style": {
            "marginBottom": "10px",
            "marginTop": "10px"
          },
          "useDefaultViewWidth": false
        },
        "type": "ia.display.flex-repeater"
      },
      {
        "meta": {
          "name": "No Private Dash Lbl"
        },
        "position": {
          "basis": "142.5px",
          "shrink": 0
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "struct": {
                  "authenticated": "{session.props.auth.authenticated}",
                  "privateInstances": "{../Private Dashboards.props.instances}"
                },
                "waitOnAll": true
              },
              "transforms": [
                {
                  "code": "\t# If user is authenticated and the length of the private dashboards \n\t# is equal to 0, then display this label.\n\t\n\tif value[\u0027authenticated\u0027] \u003d\u003d False:\n\t\treturn False\n\telse:\n\t\tif len(value[\u0027privateInstances\u0027]) \u003e 0:\n\t\t\treturn False\n\t\telse:\n\t\t\treturn True",
                  "type": "script"
                }
              ],
              "type": "expr-struct"
            }
          }
        },
        "props": {
          "style": {
            "color": "--neutral-70",
            "fontSize": "12px",
            "textAlign": "center"
          },
          "text": "No Public Dashboards found."
        },
        "type": "ia.display.label"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "backgroundColor": "--neutral-10"
      }
    },
    "type": "ia.container.flex"
  }
}