{
  "custom": {},
  "params": {
    "createdBy": "admin",
    "id": -1,
    "inEditDash": false,
    "inSettings": false,
    "name": "Test Dash",
    "selected": -1,
    "url": ""
  },
  "propConfig": {
    "params.createdBy": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.id": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.inEditDash": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.inSettings": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.name": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.selected": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.url": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 43,
      "width": 206
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "Dashboard Name"
        },
        "position": {
          "shrink": 0
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "view.params.name"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "style": {
            "color": "--neutral-100",
            "fontSize": "12px",
            "fontWeight": "bold"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Dashboard Author"
        },
        "position": {
          "shrink": 0
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "view.params.createdBy"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "style": {
            "color": "--neutral-70",
            "fontSize": "10px"
          }
        },
        "type": "ia.display.label"
      }
    ],
    "events": {
      "dom": {
        "onClick": {
          "config": {
            "script": "\t# If this dashboard is not already selected, then select it.\n\tif self.view.params.selected \u003d\u003d False:\n\t\t# If \u0027inEditDash\u0027 param is true, then user is currently viewing the \u0027Edit Dashboard\u0027\n\t\t# page; so, update the \u0027edit dashboard\u0027 object.\n\t\tif self.view.params.inEditDash:\n\t\t\turl \u003d \u0027/dashboard/\u0027 + self.view.params.url\n\t\t\tself.session.custom.dashboard.options.url \u003d url\n\t\t\tself.session.custom.dashboard.objects.edit \u003d dashboard.getDashboard(self.view.params.id,self.session.custom.dashboard.dashboards.dashboards)\n\t\t# If \u0027inSettings\u0027 param is false and \u0027inEditDash\u0027 param is false, then switch the\n\t\t# current dashboard.\n\t\telif self.view.params.inSettings \u003d\u003d False:\n\t\t\turl \u003d \u0027/dashboard/\u0027 + self.view.params.url\n\t\t\t# If current dashboard is being controlled by the session url, then call\n\t\t\t# system.perspective.navigate to switch the current dashboard. Otherwise,\n\t\t\t# simply update the options.url property (updates current dashboard without\n\t\t\t# needing to change the session url).\n\t\t\tif \u0027dashboard\u0027 in self.page.props.path:\n\t\t\t\tsystem.perspective.navigate(url)\n\t\t\telse:\n\t\t\t\tself.session.custom.dashboard.options.url \u003d url\n\t\t# If \u0027inSettings\u0027 param is true, then user is currently changing the default\n\t\t# dashboard, so send a message to defaultDashChange handler (updates the\n\t\t# default dashboard id on the user config view).\n\t\telse:\n\t\t\tsystem.perspective.sendMessage(\u0027defaultDashChange\u0027,payload\u003d{\u0027id\u0027:self.view.params.id},scope\u003d\u0027page\u0027)"
          },
          "scope": "G",
          "type": "script"
        }
      }
    },
    "meta": {
      "name": "root"
    },
    "propConfig": {
      "props.style.backgroundColor": {
        "binding": {
          "config": {
            "expression": "if({view.params.selected},\u0027--neutral-30\u0027,\u0027--neutral-10\u0027)"
          },
          "type": "expr"
        }
      },
      "props.style.cursor": {
        "binding": {
          "config": {
            "expression": "if({view.params.selected}\u003dtrue,\u0027auto\u0027,\u0027pointer\u0027)"
          },
          "type": "expr"
        }
      }
    },
    "props": {
      "direction": "column",
      "style": {
        "paddingLeft": "8px",
        "paddingRight": "8px",
        "paddingTop": "5px"
      }
    },
    "type": "ia.container.flex"
  }
}