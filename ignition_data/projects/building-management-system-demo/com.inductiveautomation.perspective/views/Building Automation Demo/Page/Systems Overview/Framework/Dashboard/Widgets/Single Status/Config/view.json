{
  "custom": {
    "options": [
      {
        "ac": 1,
        "editable": false,
        "mappings": [
          "0,Off,--error",
          "1,Auto,#2CDB1A",
          "2,Hand,#ECCD04"
        ],
        "name": "Supply HOA",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC1/Supply Fan/HMI_HOA",
        "type": "fan",
        "units": ""
      },
      {
        "ac": 1,
        "editable": true,
        "mappings": [],
        "name": "Supply Fan Hand Speed SP",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/Blue/HVAC/AC1/Supply Fan/HMI_Main_Spd_SP",
        "type": "fan",
        "units": "%"
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [],
        "name": "Supply Fan Speed CMD",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/Blue/HVAC/AC1/Supply Fan/Speed_Cmd",
        "type": "fan",
        "units": "%"
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [
          "0,Off,--neutral-100",
          "1,Running,#2CDB1A",
          "2,Run Fault,--error",
          "3,Spindown,#ECCD04"
        ],
        "name": "Supply Status",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC1/Supply Fan/Status",
        "type": "fan",
        "units": ""
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [],
        "name": "Act VAV Pressure Demand",
        "numberFormat": "#,##0",
        "path": "[default]BMS/90BR/VAV/_Global/Request_Pressure_Duct1_pct",
        "type": "fan",
        "units": "%"
      },
      {
        "ac": 1,
        "editable": true,
        "mappings": [],
        "name": "Min SP VAV Pressure Demand",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/Blue/_Demand/AC1_Demand_DP_Scale_LL",
        "type": "fan",
        "units": "%"
      },
      {
        "ac": 1,
        "editable": true,
        "mappings": [],
        "name": "Min SP Duct Pressure",
        "numberFormat": "#,##0.00",
        "path": "[default]BMS/Blue/_Demand/AC1_Duct_Pressure_Min",
        "type": "fan",
        "units": "wc"
      },
      {
        "ac": 1,
        "editable": true,
        "mappings": [],
        "name": "Max SP VAV Pressure Demand",
        "numberFormat": "#,##0.00",
        "path": "[default]BMS/Blue/_Demand/AC1_Demand_DP_Scale_HL",
        "type": "fan",
        "units": "%"
      },
      {
        "ac": 1,
        "editable": true,
        "mappings": [],
        "name": "Max SP Duct Pressure",
        "numberFormat": "#,##0.00",
        "path": "[default]BMS/Blue/_Demand/AC1_Duct_Pressure_Max",
        "type": "fan",
        "units": "wc"
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [],
        "name": "Duct Pressure SP",
        "numberFormat": "#,##0.00",
        "path": "[default]BMS/Blue/HVAC/AC1/Cntl/Duct_Static_Pressure_SP",
        "type": "fan",
        "units": "wc"
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [],
        "name": "Duct Pressure Actual",
        "numberFormat": "#,##0.00",
        "path": "[default]BMS/Blue/HVAC/AC1/Cntl/Duct_Static_Pressure",
        "type": "fan",
        "units": "wc"
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [
          "0,Off,--error",
          "1,Auto,#2CDB1A",
          "2,Hand,#ECCD04"
        ],
        "name": "Exhaust HOA",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC1/Exhaust Fan/HMI_HOA",
        "type": "fan",
        "units": ""
      },
      {
        "ac": 1,
        "editable": true,
        "mappings": [],
        "name": "Exhaust Fan Hand Speed SP",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/Blue/HVAC/AC1/Exhaust Fan/HMI_Main_Spd_SP",
        "type": "fan",
        "units": "%"
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [],
        "name": "Exhaust Fan Speed CMD",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/Blue/HVAC/AC1/Exhaust Fan/Speed_Cmd",
        "type": "fan",
        "units": "%"
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [
          "0,Off,--neutral-100",
          "1,Running,#2CDB1A",
          "2,Run Fault,--error",
          "3,Spindown,#ECCD04",
          "4,Wait cycle,#ECCD04"
        ],
        "name": "Exhaust Status",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC1/Exhaust Fan/Status",
        "type": "fan",
        "units": ""
      },
      {
        "ac": 1,
        "editable": true,
        "mappings": [],
        "name": "Building Static Pressure SP",
        "numberFormat": "#,##0.###",
        "path": "[default]BMS/Blue/HVAC/AC1/Cntl/HMI_Building_Static_Pressure_SP",
        "type": "fan",
        "units": "wc"
      },
      {
        "ac": 1,
        "editable": true,
        "mappings": [],
        "name": "Delay Off Time",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/Blue/HVAC/AC1/Exhaust_Fan_Delay_Off_SP",
        "type": "fan",
        "units": "min"
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [],
        "name": "Building Static Pressure",
        "numberFormat": "#,##0.000",
        "path": "[default]BMS/Blue/HVAC/AC1/Cntl/Building_Static_Pressure",
        "type": "fan",
        "units": "wc"
      },
      {
        "ac": 1,
        "editable": true,
        "mappings": [],
        "name": "Exhaust Off SP",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/90BR/AHU/AHU1/Exhaust_Fan/AC1_Exhaust_Fan_UnderPressure_SP",
        "type": "fan",
        "units": "wc"
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [
          "0,Off,--error",
          "1,Auto,#2CDB1A",
          "2,Hand,#ECCD04"
        ],
        "name": "Fan HOA",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC1/Cond_Fan/HMI_HOA",
        "type": "condenser",
        "units": ""
      },
      {
        "ac": 1,
        "editable": true,
        "mappings": [],
        "name": "Fan Temp SP",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/Blue/HVAC/AC1/Cond_Fan/HMI_Temp_SP",
        "type": "condenser",
        "units": "°F"
      },
      {
        "ac": 1,
        "editable": true,
        "mappings": [],
        "name": "Fan Delta Setpoint SP",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/Blue/HVAC/AC1/Cond_Fan/HMI_Delta_SP",
        "type": "condenser",
        "units": "°F"
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [
          "0,Off,--neutral-100",
          "1,Low Speed,#2CDB1A",
          "2,Hi Speed,#2CDB1A",
          "3,Lo Run Flt,--error",
          "4,Hi Run Flt,--error",
          "5, Coast Down,#2CDB1A"
        ],
        "name": "Fan Status",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC1/Cond_Fan/Status",
        "type": "condenser",
        "units": ""
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [],
        "name": "Water Temp",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/Blue/HVAC/AC1/Cntl/Cond_Water_Temp",
        "type": "condenser",
        "units": "°F"
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [],
        "name": "Fan Speed",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/Blue/HVAC/AC1/Cond_Fan_VFD_Speed_CMD",
        "type": "condenser",
        "units": "%"
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [
          "0,Off,--error",
          "1,Auto,#2CDB1A",
          "2,Hand,#ECCD04"
        ],
        "name": "Water Pump HOA",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC1/Cond_Pump/HMI_HOA",
        "type": "condenser",
        "units": ""
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [
          "0,Off,--neutral-100",
          "1,Running,#2CDB1A",
          "2,Run Fault,--error"
        ],
        "name": "Water Pump Status",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC1/Cond_Pump/Status",
        "type": "condenser",
        "units": ""
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [],
        "name": "Folsom Air Quality Index PM2.5",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/Blue/Air_Quality_Index",
        "type": "economizer",
        "units": ""
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [
          "0,Close,--error",
          "1,Auto,#2CDB1A",
          "2,Max,#ECCD04",
          "3,Min,#f5a442"
        ],
        "name": "HOA",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC1/Economizer/HMI_OCA",
        "type": "economizer",
        "units": ""
      },
      {
        "ac": 1,
        "editable": true,
        "mappings": [],
        "name": "Min Open SP",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/Blue/HVAC/AC1/Economizer/HMI_Min_Open_SP",
        "type": "economizer",
        "units": "%"
      },
      {
        "ac": 1,
        "editable": true,
        "mappings": [],
        "name": "Max Open SP",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/Blue/HVAC/AC1/Economizer/HMI_Main_Open_SP",
        "type": "economizer",
        "units": "%"
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [],
        "name": "Open CMD",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/Blue/HVAC/AC1/Economizer/Open_Cmd",
        "type": "economizer",
        "units": "%"
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [
          "0,Close,--neutral-100",
          "1,Open,#2CDB1A"
        ],
        "name": "Status",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC1/Economizer/Status",
        "type": "economizer",
        "units": ""
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [],
        "name": "Act Demand",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/90BR/VAV/_Global/Request_Cool_pct",
        "type": "compressor",
        "units": "%"
      },
      {
        "ac": 1,
        "editable": true,
        "mappings": [],
        "name": "Cooling Min Demand",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/Blue/_Demand/AC1_Cntl_Cooling_Demand_pct_Min",
        "type": "compressor",
        "units": "%"
      },
      {
        "ac": 1,
        "editable": true,
        "mappings": [],
        "name": "Cooling Max Demand",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/Blue/_Demand/AC1_Cntl_Cooling_Demand_pct_Max",
        "type": "compressor",
        "units": "%"
      },
      {
        "ac": 1,
        "editable": true,
        "mappings": [],
        "name": "Temp High SP",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/Blue/HVAC/AC1/Supply_Air_Max_Temp_SP",
        "type": "compressor",
        "units": "°F"
      },
      {
        "ac": 1,
        "editable": true,
        "mappings": [],
        "name": "Temp Low SP",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/Blue/HVAC/AC1/Supply_Air_Min_Temp_SP",
        "type": "compressor",
        "units": "°F"
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [],
        "name": "Supply Air Temp SP",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/Blue/HVAC/AC1/Cntl/Supply_Air_Temp_SP",
        "type": "compressor",
        "units": "°F"
      },
      {
        "ac": 1,
        "editable": true,
        "mappings": [],
        "name": "Supply Air Delta",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/Blue/HVAC/AC1/Cntl/Supply_Air_Delta_SP",
        "type": "compressor",
        "units": "°F"
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [],
        "name": "Supply Air Temp Actual",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/Blue/HVAC/AC1/Cntl/Supply_Air_Temp",
        "type": "compressor",
        "units": "°F"
      },
      {
        "ac": 1,
        "editable": true,
        "mappings": [],
        "name": "OSA Cool Min",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/Blue/HVAC/AC1/Cntl/HMI_OSA_Cool_Min_SP",
        "type": "compressor",
        "units": "°F"
      },
      {
        "ac": 1,
        "editable": true,
        "mappings": [],
        "name": "OSA Delta",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/Blue/HVAC/AC1/Cntl/HMI_OSA_Delta_SP",
        "type": "compressor",
        "units": "°F"
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [
          "0,Off,--error",
          "1,Auto,#2CDB1A"
        ],
        "name": "HOA",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC1/Comp1/HMI_HOA",
        "type": "compressor",
        "units": ""
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [
          "0,Off,--neutral-100",
          "1,Running,#2CDB1A",
          "2,Run Fault,--error"
        ],
        "name": "Status",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC1/Comp1/Status",
        "type": "compressor",
        "units": ""
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [],
        "name": "Delay On",
        "numberFormat": "#,##0",
        "path": "[default]BMS/Blue/HVAC/AC1/Comp1/Delay_On_ACC",
        "type": "compressor",
        "units": "sec"
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [],
        "name": "Delay Off",
        "numberFormat": "#,##0",
        "path": "[default]BMS/Blue/HVAC/AC1/Comp1/Delay_Off _ACC",
        "type": "compressor",
        "units": "sec"
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [],
        "name": "Outside Static Pressure",
        "numberFormat": "#,##0.00",
        "path": "[default]BMS/Blue/HVAC/AC1/Cntl/OSA_Static_Pressure",
        "type": "other",
        "units": "wc"
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [
          "0,OK,#2CDB1A",
          "1,FLT,--error"
        ],
        "name": "Smoke Alarm",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC1/Cntl/Smoke_Alarm",
        "type": "other",
        "units": ""
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [],
        "name": "Return Air Temp",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/Blue/HVAC/AC1/Cntl/Return_Air_Temp",
        "type": "other",
        "units": "°F"
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [],
        "name": "Mixed Air Temp",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/Blue/HVAC/AC1/Cntl/Mixed_Air_Temp",
        "type": "other",
        "units": "°F"
      },
      {
        "ac": 1,
        "editable": false,
        "mappings": [],
        "name": "VAV Cold Duct Flow",
        "numberFormat": "#,##0",
        "path": "[default]BMS/90BR/VAV/Flow_Duct1_Total",
        "type": "other",
        "units": "cfm"
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [
          "0,Off,--error",
          "1,Auto,#2CDB1A",
          "2,Hand,#ECCD04"
        ],
        "name": "Supply HOA",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC2/Supply Fan/HMI_HOA",
        "type": "fan",
        "units": ""
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [
          "0,Off,--neutral-100",
          "1,Running,#2CDB1A",
          "2,Run Fault,--error",
          "3,Spindown,#ECCD04"
        ],
        "name": "Supply Status",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC2/Supply Fan/Status",
        "type": "fan",
        "units": ""
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [],
        "name": "Speed CMD",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/Blue/HVAC/AC2/Supply Fan/Speed_Cmd",
        "type": "fan",
        "units": "%"
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "Supply Fan Hand Speed",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/Blue/HVAC/AC2/Supply Fan/HMI_Main_Spd_SP",
        "type": "fan",
        "units": "%"
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [],
        "name": "Actual VAV Pressure Demand",
        "numberFormat": "#,##0",
        "path": "[default]BMS/90BR/VAV/_Global/Request_Pressure_Duct2_pct",
        "type": "fan",
        "units": "%"
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "Min SP VAV Pressure Demand",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/Blue/_Demand/AC2_Demand_DP_Scale_LL",
        "type": "fan",
        "units": "%"
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "Min SP Duct Pressure",
        "numberFormat": "#,##0.00",
        "path": "[default]BMS/Blue/_Demand/AC2_Duct_Pressure_Min",
        "type": "fan",
        "units": "wc"
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "Max SP VAV Pressure Demand",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/Blue/_Demand/AC2_Demand_DP_Scale_HL",
        "type": "fan",
        "units": "%"
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "Max SP Duct Pressure",
        "numberFormat": "#,##0.00",
        "path": "[default]BMS/Blue/_Demand/AC2_Duct_Pressure_Max",
        "type": "fan",
        "units": "wc"
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [],
        "name": "Duct Pressure SP",
        "numberFormat": "#,##0.00",
        "path": "[default]BMS/Blue/HVAC/AC2/Cntl/Duct_Static_Pressure_SP",
        "type": "fan",
        "units": "wc"
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [],
        "name": "Duct Pressure Actual",
        "numberFormat": "#,##0.00",
        "path": "[default]BMS/Blue/HVAC/AC2/Cntl/Duct_Static_Pressure",
        "type": "fan",
        "units": "wc"
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [
          "0,Off,--error",
          "1,Auto,#2CDB1A",
          "2,Low,#ECCD04",
          "3,High,#f5a442"
        ],
        "name": "Fan HOA",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC2/Cond_Fan/HMI_HOA",
        "type": "condenser",
        "units": ""
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "Fan Temp SP",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/Blue/HVAC/AC2/Cond_Fan/HMI_Temp_SP",
        "type": "condenser",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "Fan Delta SP",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/Blue/HVAC/AC2/Cond_Fan/HMI_Delta_SP",
        "type": "condenser",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [
          "0,Off,--neutral-100",
          "1,Low Speed,#2CDB1A",
          "2,Hi Speed,#2CDB1A",
          "3,Lo Run Flt,--error",
          "4,Hi Run Flt,--error",
          "5, Coast Down,#2CDB1A"
        ],
        "name": "Fan Status",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC2/Cond_Fan/Status",
        "type": "condenser",
        "units": ""
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [],
        "name": "Water Temp",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/Blue/HVAC/AC2/Cntl/Cond_Water_Temp",
        "type": "condenser",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [
          "0,Off,--error",
          "1,Auto,#2CDB1A",
          "2,Hand,#ECCD04"
        ],
        "name": "Water Pump HOA",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC2/Cond_Pump/HMI_HOA",
        "type": "condenser",
        "units": ""
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [
          "0,Off,--neutral-100",
          "1,Running,#2CDB1A",
          "2,Run Fault,--error"
        ],
        "name": "Water Pump Status",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC2/Cond_Pump/Status",
        "type": "condenser",
        "units": ""
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "OSA Heat Max",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/Blue/HVAC/AC2/Cntl/HMI_OSA_Heat_Max_SP",
        "type": "heatingControls",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [],
        "name": "Return Air Temp",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/90BR/AHU/AHU2/Return_Air_Temp",
        "type": "heatingControls",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "Supply Air Temp Heat Flow Low",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/90BR/AHU/AHU2/Supply_Air_Temp_Heat_calc/Supply_Air_Temp_Heat_flow_low",
        "type": "heatingControls",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "Supply Air Temp Heat Flow High",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/90BR/AHU/AHU2/Supply_Air_Temp_Heat_calc/Supply_Air_Temp_Heat_flow_high",
        "type": "heatingControls",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "Supply Air Temp Heat Flow Low SP",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/90BR/AHU/AHU2/Supply_Air_Temp_Heat_calc/Supply_Air_Temp_Heat_SP_low",
        "type": "heatingControls",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [],
        "name": "Supply Air Temp Heat Flow High SP",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/90BR/AHU/AHU2/Supply_Air_Temp_Heat_calc/Supply_Air_Temp_Heat_SP_high",
        "type": "heatingControls",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "Heating Temp SP",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/Blue/HVAC/AC2/Heating/HMI_Heating_Temp_SP",
        "type": "heatingControls",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [],
        "name": "Supply Air Temp Actual",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/Blue/HVAC/AC2/Cntl/Supply_Air_Temp",
        "type": "heatingControls",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [
          "0,Off,--neutral-100",
          "1,On,#2CDB1A"
        ],
        "name": "Heat Stage 1 On",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC2/AC2_Heat_Stage1_On",
        "type": "heatingControls",
        "units": ""
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [
          "0,Off,--neutral-100",
          "1,On,#2CDB1A"
        ],
        "name": "Heat Stage 2 On",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC2/AC2_Heat_Stage2_On",
        "type": "heatingControls",
        "units": ""
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [
          "0,Off,--neutral-100",
          "1,On,#2CDB1A"
        ],
        "name": "Heat Stage 3 On",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC2/AC2_Heat_Stage3_On",
        "type": "heatingControls",
        "units": ""
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [
          "0,Off,--neutral-100",
          "1,On,#2CDB1A"
        ],
        "name": "Heat Stage 4 On",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC2/AC2_Heat_Stage4_On",
        "type": "heatingControls",
        "units": ""
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "Stage 1 SAT SP On",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/90BR/AHU/AHU2/Heater_Logic/AHU2_Heat_Stage1_SP_On_D",
        "type": "heatingControls",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "Stage 2 SAT SP On",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/90BR/AHU/AHU2/Heater_Logic/AHU2_Heat_Stage2_SP_On_D",
        "type": "heatingControls",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "Stage 3 SAT SP On",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/90BR/AHU/AHU2/Heater_Logic/AHU2_Heat_Stage3_SP_On_D",
        "type": "heatingControls",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "Stage 4 SAT SP On",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/90BR/AHU/AHU2/Heater_Logic/AHU2_Heat_Stage4_SP_On_D",
        "type": "heatingControls",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "Stage 1 SAT SP Off",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/90BR/AHU/AHU2/Heater_Logic/AHU2_Heat_Stage1_SP_Off_D",
        "type": "heatingControls",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "Stage 2 SAT SP Off",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/90BR/AHU/AHU2/Heater_Logic/AHU2_Heat_Stage2_SP_Off_D",
        "type": "heatingControls",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "Stage 3 SAT SP Off",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/90BR/AHU/AHU2/Heater_Logic/AHU2_Heat_Stage3_SP_Off_D",
        "type": "heatingControls",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "Stage 4 SAT SP Off",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/90BR/AHU/AHU2/Heater_Logic/AHU2_Heat_Stage4_SP_Off_D",
        "type": "heatingControls",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [],
        "name": "Request Peak Cool Act Demand",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/90BR/VAV/_Global/Request_PeakCool_pct",
        "type": "compressor",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "Peak Cool Min Demand",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/Blue/_Demand/AC2_Cntl_PeakCool_Demand_pct_Min",
        "type": "compressor",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "Peak Cool Max Demand",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/Blue/_Demand/AC2_Cntl_PeakCool_Demand_pct_Max",
        "type": "compressor",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "Temp High SP",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/Blue/HVAC/AC2/Supply_Air_Max_Temp_SP",
        "type": "compressor",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "Temp Low SP",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/Blue/HVAC/AC2/Supply_Air_Min_Temp_SP",
        "type": "compressor",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [],
        "name": "Supply Air Temp SP",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/Blue/HVAC/AC2/Cntl/Supply_Air_Temp_SP",
        "type": "compressor",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "Supply Air Delta",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/Blue/HVAC/AC2/Cntl/Supply_Air_Delta_SP",
        "type": "compressor",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [],
        "name": "Supply Air Temp Actual",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/Blue/HVAC/AC2/Cntl/Supply_Air_Temp",
        "type": "compressor",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "OSA Cool Min",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/Blue/HVAC/AC2/Cntl/HMI_OSA_Cool_Min_SP",
        "type": "compressor",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": true,
        "mappings": [],
        "name": "OSA Delta",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/Blue/HVAC/AC2/Cntl/HMI_OSA_Delta_SP",
        "type": "compressor",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [
          "0,Off,--error",
          "1,Auto,#2CDB1A"
        ],
        "name": "HOA",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC2/Comp1/HMI_HOA",
        "type": "compressor",
        "units": ""
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [
          "0,Off,--neutral-100",
          "1,Running,#2CDB1A",
          "2,Run Fault,--error"
        ],
        "name": "Status",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC2/Comp1/Status",
        "type": "compressor",
        "units": ""
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [],
        "name": "Delay On",
        "numberFormat": "#,##0",
        "path": "[default]BMS/Blue/HVAC/AC2/Comp1/Delay_On_ACC",
        "type": "compressor",
        "units": "sec"
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [],
        "name": "Delay Off",
        "numberFormat": "#,##0",
        "path": "[default]BMS/Blue/HVAC/AC2/Comp1/Delay_Off _ACC",
        "type": "compressor",
        "units": "sec"
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [
          "0,OK,#2CDB1A",
          "1,FLT,--error"
        ],
        "name": "Smoke Alarm",
        "numberFormat": "",
        "path": "[default]BMS/Blue/HVAC/AC2/Cntl/Smoke_Alarm",
        "type": "other",
        "units": ""
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [],
        "name": "Return Air Temp",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/Blue/HVAC/AC2/Cntl/Return_Air_Temp",
        "type": "other",
        "units": "°F"
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [],
        "name": "VAV Hot Duct Flow",
        "numberFormat": "#,##0",
        "path": "[default]BMS/90BR/VAV/Flow_Duct2_Total",
        "type": "other",
        "units": "cfm"
      },
      {
        "ac": 2,
        "editable": false,
        "mappings": [],
        "name": "Return To Supply Differential",
        "numberFormat": "#,##0.##",
        "path": "[default]BMS/90BR/AHU/AHU2/Return_to_Supply_Differential",
        "type": "other",
        "units": "°F"
      },
      {
        "ac": 3,
        "editable": false,
        "mappings": [
          "1,Auto,#2CDB1A",
          "0,Off,--error",
          "2,Hand,--warning"
        ],
        "name": "Cooling System Mode",
        "numberFormat": "",
        "path": "[default]BMS/Blue/_Demand/System_Cool_HOA",
        "type": "other",
        "units": ""
      },
      {
        "ac": 3,
        "editable": false,
        "mappings": [
          "1,Auto,#2CDB1A",
          "0,Off,--error",
          "2,Hand,--warning"
        ],
        "name": "Heating System Mode",
        "numberFormat": "",
        "path": "[default]BMS/Blue/_Demand/System_Heat_HOA",
        "type": "other",
        "units": ""
      },
      {
        "ac": 3,
        "editable": false,
        "mappings": [
          "1,Auto,#2CDB1A",
          "0,Off,--error",
          "2,Hand,--warning"
        ],
        "name": "Peak System Mode",
        "numberFormat": "",
        "path": "[default]BMS/Blue/_Demand/System_PeakCool_HOA",
        "type": "other",
        "units": ""
      },
      {
        "ac": 3,
        "editable": false,
        "mappings": [],
        "name": "Outside Air Temp",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/Blue/HVAC/AC1/Cntl/Outside_Air_Temp",
        "type": "other",
        "units": "°F"
      },
      {
        "ac": 3,
        "editable": false,
        "mappings": [],
        "name": "Average Building Temp",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/90BR/VAV/_Global/Temp_Avg_Building",
        "type": "other",
        "units": "°F"
      },
      {
        "ac": 3,
        "editable": false,
        "mappings": [
          "1,HEAT,--error",
          "0,PEAK,--callToAction--active",
          "2,COOL,--neutral-10",
          "3,OFF,--neutral-10"
        ],
        "name": "System Mode",
        "numberFormat": "",
        "path": "System Mode",
        "type": "other",
        "units": ""
      },
      {
        "ac": 3,
        "editable": false,
        "mappings": [],
        "name": "Floor 1 Avg Temp",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/90BR/VAV/_Global/Temp_Avg_Floor1",
        "type": "other",
        "units": "°F"
      },
      {
        "ac": 3,
        "editable": false,
        "mappings": [],
        "name": "Floor 2 Avg Temp",
        "numberFormat": "#,##0.0",
        "path": "[default]BMS/90BR/VAV/_Global/Temp_Avg_Floor2",
        "type": "other",
        "units": "°F"
      }
    ]
  },
  "params": {
    "currentParams": {
      "ac": -1,
      "compressor": -1,
      "editable": false,
      "highThreshold": "",
      "icon": "",
      "iconVisible": true,
      "lowThreshold": "",
      "mappings": [],
      "name": "",
      "numberFormat": "",
      "path": "",
      "type": "",
      "units": "",
      "widgetTitle": ""
    }
  },
  "propConfig": {
    "custom.key": {
      "persistent": true
    },
    "custom.name": {
      "persistent": true
    },
    "custom.options": {
      "persistent": true
    },
    "custom.optionsBackup": {
      "persistent": true
    },
    "custom.selectingColor": {
      "persistent": true
    },
    "params.currentParams": {
      "paramDirection": "inout",
      "persistent": true
    },
    "params.currentParams.ac": {
      "onChange": {
        "enabled": null,
        "script": "\t# Get the current value type.\n\ttype \u003d self.params.currentParams.type\n\t\t\n\t# Get the current ac (ahu).\n\tac \u003d currentValue.value\n\t\n\t# Set type to \u0027other\u0027 if ac (ahu) is 3.\n\tif ac \u003d\u003d 3:\n\t\ttype \u003d \u0027other\u0027\n\n\t# Iterate through the tag \u0027options\u0027 custom property,\n\t# finding the appropriate tags based on the selected\n\t# type and selected ac (ahu) and appending these tags\n\t# to the tags list.\n\ttags \u003d []\n\toptions \u003d self.custom.options\n\tfor option in options:\n\t\ttypeProp \u003d option[\u0027type\u0027]\n\t\tacProp \u003d option[\u0027ac\u0027]\n\t\tif typeProp \u003d\u003d type and acProp \u003d\u003d ac:\n\t\t\tname \u003d option[\u0027name\u0027]\n\t\t\tunits \u003d option[\u0027units\u0027]\n\t\t\tpath \u003d option[\u0027path\u0027]\n\t\t\tmappings \u003d option[\u0027mappings\u0027]\n\t\t\tnumberFormat \u003d option[\u0027numberFormat\u0027]\n\t\t\teditable \u003d option[\u0027editable\u0027]\n\t\t\t\n\t\t\ttags.append({\u0027value\u0027:path,\u0027label\u0027:name,\u0027units\u0027:units,\u0027mappings\u0027:mappings,\u0027numberFormat\u0027:numberFormat,\u0027editable\u0027:editable})\n\t\n\t# Set the options for the tag dropdown equal to the tags list.\n\tself.getChild(\"root\").getChild(\"Tag\").getChild(\"Tag\").props.options \u003d tags"
      }
    },
    "params.currentParams.type": {
      "onChange": {
        "enabled": null,
        "script": "\t# Get the current value type.\n\ttype \u003d currentValue.value\n\t\n\t# Get the current ac (ahu).\n\tac \u003d self.params.currentParams.ac\n\n\t# Iterate through the tag \u0027options\u0027 custom property,\n\t# finding the appropriate tags based on the selected\n\t# type and selected ac (ahu) and appending these tags\n\t# to the tags list.\n\ttags \u003d []\n\toptions \u003d self.custom.options\n\tfor option in options:\n\t\ttypeProp \u003d option[\u0027type\u0027]\n\t\tacProp \u003d option[\u0027ac\u0027]\n\t\tif typeProp \u003d\u003d type and acProp \u003d\u003d ac:\n\t\t\tname \u003d option[\u0027name\u0027]\n\t\t\tunits \u003d option[\u0027units\u0027]\n\t\t\tpath \u003d option[\u0027path\u0027]\n\t\t\tmappings \u003d option[\u0027mappings\u0027]\n\t\t\tnumberFormat \u003d option[\u0027numberFormat\u0027]\n\t\t\teditable \u003d option[\u0027editable\u0027]\n\t\t\t\n\t\t\ttags.append({\u0027value\u0027:path,\u0027label\u0027:name,\u0027units\u0027:units,\u0027mappings\u0027:mappings,\u0027numberFormat\u0027:numberFormat,\u0027editable\u0027:editable})\n\t\n\t# Set the options for the tag dropdown equal to the tags list.\n\tself.getChild(\"root\").getChild(\"Tag\").getChild(\"Tag\").props.options \u003d tags"
      }
    },
    "params.key": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 842,
      "width": 477
    }
  },
  "root": {
    "children": [
      {
        "children": [
          {
            "meta": {
              "name": "Label Widget Title"
            },
            "props": {
              "style": {
                "color": "--neutral-100",
                "fontSize": "16px",
                "white-space": "nowrap"
              },
              "text": "Widget Title"
            },
            "type": "ia.display.label"
          },
          {
            "meta": {
              "name": "Title"
            },
            "position": {
              "basis": "35px"
            },
            "propConfig": {
              "props.text": {
                "binding": {
                  "config": {
                    "bidirectional": true,
                    "path": "view.params.currentParams.widgetTitle"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "style": {
                "backgroundColor": "--neutral-10",
                "borderBottomStyle": "solid",
                "borderLeftStyle": "none",
                "borderRightStyle": "none",
                "borderTopStyle": "none",
                "fontSize": "15px",
                "outlineStyle": "none"
              }
            },
            "type": "ia.input.text-field"
          }
        ],
        "meta": {
          "name": "Widget Title"
        },
        "position": {
          "basis": "50px"
        },
        "props": {
          "direction": "column"
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "children": [
              {
                "meta": {
                  "name": "Title"
                },
                "props": {
                  "style": {
                    "color": "--neutral-100",
                    "fontSize": "16px",
                    "white-space": "nowrap"
                  },
                  "text": "Icon"
                },
                "type": "ia.display.label"
              }
            ],
            "meta": {
              "name": "Title Cont"
            },
            "props": {
              "style": {
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "children": [
                  {
                    "children": [
                      {
                        "meta": {
                          "name": "Name"
                        },
                        "propConfig": {
                          "props.style.color": {
                            "binding": {
                              "config": {
                                "path": "view.params.currentParams.icon"
                              },
                              "transforms": [
                                {
                                  "code": "\t# If the default icon name is being returned (based on what user has selected), then\n\t# change the font color of icon name such that it is darker (like a placeholder).\n\t\n\tif len(value) \u003d\u003d 0:\n\t\treturn \u0027--neutral-60\u0027\n\telse:\n\t\treturn \u0027--neutral-100\u0027",
                                  "type": "script"
                                }
                              ],
                              "type": "property"
                            }
                          },
                          "props.text": {
                            "binding": {
                              "config": {
                                "struct": {
                                  "ac": "{view.params.currentParams.ac}",
                                  "icon": "{view.params.currentParams.icon}",
                                  "name": "{view.params.currentParams.name}",
                                  "path": "{view.params.currentParams.path}",
                                  "type": "{view.params.currentParams.type}"
                                },
                                "waitOnAll": true
                              },
                              "transforms": [
                                {
                                  "code": "\t# If the user has not selected an icon manually, then we can use the current\n\t# params, ac, name, tag path, and type, to figure out a default icon and then\n\t# return the name of it.\n\t\n\ttypeMap \u003d {\u0027fan\u0027:\u0027Fan\u0027,\u0027condenser\u0027:\u0027Condenser\u0027,\u0027economizer\u0027:\u0027Economizer\u0027,\u0027heatingControls\u0027:\u0027Heating Controls\u0027,\u0027compressor\u0027:\u0027Compressor\u0027,\u0027\u0027:\u0027\u0027}\n\t\n\ticon \u003d value[\u0027icon\u0027]\n\ttype \u003d value[\u0027type\u0027]\n\tac \u003d value[\u0027ac\u0027]\n\tpath \u003d value[\u0027path\u0027]\n\tname \u003d value[\u0027name\u0027]\n\t\n\tif len(icon) \u003d\u003d 0:\n\t\tif ac \u003d\u003d -1:\n\t\t\treturn \u0027\u0027\n\t\telif ac in [1,2] and type !\u003d \u0027other\u0027:\n\t\t\treturn typeMap[type]\n\t\telif ac in [1,2] and type \u003d\u003d \u0027other\u0027:\n\t\t\tif \u0027pressure\u0027 in name.lower():\n\t\t\t\treturn \u0027Pressure\u0027\n\t\t\telif \u0027smoke\u0027 in name.lower():\n\t\t\t\treturn \u0027smoke free\u0027\n\t\t\telif \u0027temp\u0027 in name.lower() or \u0027differential\u0027 in name.lower():\n\t\t\t\treturn \u0027Temperature\u0027\n\t\t\telif \u0027cold\u0027 in name.lower():\n\t\t\t\treturn \u0027ac unit\u0027\n\t\t\telif \u0027hot\u0027 in name.lower():\n\t\t\t\treturn \u0027whatshot\u0027\n\t\t\telse:\n\t\t\t\treturn \u0027info\u0027\n\t\telif ac \u003d\u003d 3:\n\t\t\tif \u0027cooling\u0027 in name.lower() or \u0027peak\u0027 in name.lower():\n\t\t\t\treturn \u0027ac unit\u0027\n\t\t\telif \u0027heating\u0027 in name.lower():\n\t\t\t\treturn \u0027whatshot\u0027\n\t\t\telif \u0027temp\u0027 in name.lower():\n\t\t\t\treturn \u0027Temperature\u0027\n\t\t\telse:\n\t\t\t\treturn \u0027info\u0027\n\telse:\n\t\treturn icon.replace(\u0027_\u0027,\u0027 \u0027)",
                                  "type": "script"
                                }
                              ],
                              "type": "expr-struct"
                            }
                          }
                        },
                        "props": {
                          "style": {
                            "backgroundColor": "--neutral-10",
                            "fontSize": "15px",
                            "marginRight": "10px"
                          }
                        },
                        "type": "ia.display.label"
                      },
                      {
                        "meta": {
                          "name": "Condenser"
                        },
                        "position": {
                          "basis": "20px"
                        },
                        "propConfig": {
                          "position.display": {
                            "binding": {
                              "config": {
                                "struct": {
                                  "icon": "{view.params.currentParams.icon}",
                                  "type": "{view.params.currentParams.type}"
                                },
                                "waitOnAll": true
                              },
                              "transforms": [
                                {
                                  "code": "\t# If the value type is condenser and the user has not manually\n\t# selected an icon, or if the user manually selected the condenser,\n\t# then display the condenser icon.\n\t\n\ticon \u003d value[\u0027icon\u0027]\n\ttype \u003d value[\u0027type\u0027]\n\t\n\tif len(icon) \u003d\u003d 0 and type\u003d\u003d\u0027condenser\u0027:\n\t\treturn True\n\telif icon \u003d\u003d \u0027condenser\u0027:\n\t\treturn True\n\telse:\n\t\treturn False\n\t\t",
                                  "type": "script"
                                }
                              ],
                              "type": "expr-struct"
                            }
                          },
                          "props.fill": {
                            "binding": {
                              "config": {
                                "path": "view.params.currentParams.icon"
                              },
                              "transforms": [
                                {
                                  "code": "\tif value \u003d\u003d \u0027condenser\u0027:\n\t\treturn \u0027var(--neutral-100)\u0027\n\telse:\n\t\treturn \u0027var(--neutral-60)\u0027",
                                  "type": "script"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "elements": [
                            {
                              "elements": [
                                {
                                  "d": "M39.063 47.656 L 27.339 71.094 13.669 71.094 L 0.000 71.094 0.000 223.438 L 0.000 375.781 200.000 375.781 L 400.000 375.781 400.000 223.438 L 400.000 71.094 386.331 71.094 L 372.661 71.094 360.937 47.656 L 349.214 24.219 200.000 24.219 L 50.786 24.219 39.063 47.656 M339.453 59.375 L 345.322 71.094 200.000 71.094 L 54.678 71.094 60.547 59.375 L 66.416 47.656 200.000 47.656 L 333.584 47.656 339.453 59.375 M188.281 200.000 L 188.281 305.469 105.859 305.469 L 23.438 305.469 23.438 293.750 L 23.438 282.031 46.875 282.031 L 70.313 282.031 70.313 200.000 L 70.313 117.969 46.875 117.969 L 23.438 117.969 23.438 106.250 L 23.438 94.531 105.859 94.531 L 188.281 94.531 188.281 200.000 M376.563 106.250 L 376.563 117.969 353.125 117.969 L 329.688 117.969 329.688 200.000 L 329.688 282.031 353.125 282.031 L 376.563 282.031 376.563 293.750 L 376.563 305.469 294.141 305.469 L 211.719 305.469 211.719 200.000 L 211.719 94.531 294.141 94.531 L 376.563 94.531 376.563 106.250 M93.750 129.688 L 93.750 141.406 129.297 141.406 L 164.844 141.406 164.844 129.688 L 164.844 117.969 129.297 117.969 L 93.750 117.969 93.750 129.688 M235.156 129.688 L 235.156 141.406 270.703 141.406 L 306.250 141.406 306.250 129.688 L 306.250 117.969 270.703 117.969 L 235.156 117.969 235.156 129.688 M46.875 153.125 L 46.875 164.844 35.156 164.844 L 23.438 164.844 23.438 153.125 L 23.438 141.406 35.156 141.406 L 46.875 141.406 46.875 153.125 M376.563 153.125 L 376.563 164.844 364.844 164.844 L 353.125 164.844 353.125 153.125 L 353.125 141.406 364.844 141.406 L 376.563 141.406 376.563 153.125 M93.750 176.563 L 93.750 188.281 129.297 188.281 L 164.844 188.281 164.844 176.563 L 164.844 164.844 129.297 164.844 L 93.750 164.844 93.750 176.563 M235.156 176.563 L 235.156 188.281 270.703 188.281 L 306.250 188.281 306.250 176.563 L 306.250 164.844 270.703 164.844 L 235.156 164.844 235.156 176.563 M46.875 200.000 L 46.875 211.719 35.156 211.719 L 23.438 211.719 23.438 200.000 L 23.438 188.281 35.156 188.281 L 46.875 188.281 46.875 200.000 M376.563 200.000 L 376.563 211.719 364.844 211.719 L 353.125 211.719 353.125 200.000 L 353.125 188.281 364.844 188.281 L 376.563 188.281 376.563 200.000 M93.750 223.438 L 93.750 235.156 129.297 235.156 L 164.844 235.156 164.844 223.438 L 164.844 211.719 129.297 211.719 L 93.750 211.719 93.750 223.438 M235.156 223.438 L 235.156 235.156 270.703 235.156 L 306.250 235.156 306.250 223.438 L 306.250 211.719 270.703 211.719 L 235.156 211.719 235.156 223.438 M46.875 246.875 L 46.875 258.594 35.156 258.594 L 23.438 258.594 23.438 246.875 L 23.438 235.156 35.156 235.156 L 46.875 235.156 46.875 246.875 M376.563 246.875 L 376.563 258.594 364.844 258.594 L 353.125 258.594 353.125 246.875 L 353.125 235.156 364.844 235.156 L 376.563 235.156 376.563 246.875 M93.750 270.313 L 93.750 282.031 129.297 282.031 L 164.844 282.031 164.844 270.313 L 164.844 258.594 129.297 258.594 L 93.750 258.594 93.750 270.313 M235.156 270.313 L 235.156 282.031 270.703 282.031 L 306.250 282.031 306.250 270.313 L 306.250 258.594 270.703 258.594 L 235.156 258.594 235.156 270.313 M376.563 340.625 L 376.563 352.344 200.000 352.344 L 23.438 352.344 23.438 340.625 L 23.438 328.906 200.000 328.906 L 376.563 328.906 376.563 340.625 ",
                                  "fill": {
                                    "rule": "evenodd"
                                  },
                                  "name": "path0",
                                  "stroke": {
                                    "paint": "none"
                                  },
                                  "type": "path"
                                }
                              ],
                              "name": "svgg",
                              "type": "group"
                            }
                          ],
                          "viewBox": "0, 0, 400,400"
                        },
                        "type": "ia.shapes.svg"
                      },
                      {
                        "meta": {
                          "name": "Economizer"
                        },
                        "position": {
                          "basis": "20px"
                        },
                        "propConfig": {
                          "position.display": {
                            "binding": {
                              "config": {
                                "struct": {
                                  "icon": "{view.params.currentParams.icon}",
                                  "type": "{view.params.currentParams.type}"
                                },
                                "waitOnAll": true
                              },
                              "transforms": [
                                {
                                  "code": "\t# If the value type is economizer and the user has not manually\n\t# selected an icon, or if the user manually selected the economizer,\n\t# then display the economizer icon.\n\t\n\ticon \u003d value[\u0027icon\u0027]\n\ttype \u003d value[\u0027type\u0027]\n\t\n\tif len(icon) \u003d\u003d 0 and type\u003d\u003d\u0027economizer\u0027:\n\t\treturn True\n\telif icon \u003d\u003d \u0027economizer\u0027:\n\t\treturn True\n\telse:\n\t\treturn False\n\t\t",
                                  "type": "script"
                                }
                              ],
                              "type": "expr-struct"
                            }
                          },
                          "props.fill": {
                            "binding": {
                              "config": {
                                "path": "view.params.currentParams.icon"
                              },
                              "transforms": [
                                {
                                  "code": "\tif value \u003d\u003d \u0027economizer\u0027:\n\t\treturn \u0027var(--neutral-100)\u0027\n\telse:\n\t\treturn \u0027var(--neutral-60)\u0027",
                                  "type": "script"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "elements": [
                            {
                              "elements": [
                                {
                                  "d": "M189.955 75.381 L 164.006 101.428 232.003 100.714 L 300.000 100.000 300.755 74.667 L 301.510 49.333 258.708 49.333 L 215.905 49.333 189.955 75.381 M282.667 74.667 L 282.667 82.667 266.667 82.667 L 250.667 82.667 250.667 74.667 L 250.667 66.667 266.667 66.667 L 282.667 66.667 282.667 74.667 M48.000 192.000 L 48.000 286.380 57.333 277.333 L 66.667 268.287 76.000 277.333 L 85.333 286.380 85.333 192.000 L 85.333 97.620 76.000 106.667 L 66.667 115.713 57.333 106.667 L 48.000 97.620 48.000 192.000 M128.000 117.989 C 128.000 119.268,126.936 119.657,125.635 118.853 C 122.699 117.039,116.723 123.834,119.134 126.245 C 120.099 127.210,119.489 128.000,117.778 128.000 C 116.067 128.000,114.809 128.900,114.982 130.000 C 115.156 131.100,115.156 139.500,114.982 148.667 L 114.667 165.333 106.667 165.333 L 98.667 165.333 98.667 192.000 L 98.667 218.667 106.667 218.667 C 114.636 218.667,114.667 218.726,114.667 234.133 C 114.667 242.814,116.129 251.176,118.000 253.191 C 120.667 256.064,120.667 256.406,118.000 254.900 C 113.344 252.272,113.846 254.292,119.333 260.259 C 122.493 263.695,128.520 265.628,138.000 266.245 L 152.000 267.157 152.000 190.789 L 152.000 114.421 140.000 115.042 C 133.400 115.384,128.000 116.710,128.000 117.989 M165.333 124.000 L 165.333 133.333 233.333 133.333 L 301.333 133.333 301.333 124.000 L 301.333 114.667 233.333 114.667 L 165.333 114.667 165.333 124.000 M314.667 190.741 L 314.667 267.062 328.667 266.375 C 352.005 265.229,351.799 265.894,351.799 191.708 C 351.799 146.163,350.940 128.000,348.788 128.000 C 347.132 128.000,346.567 127.210,347.532 126.245 C 349.944 123.834,343.968 117.039,341.031 118.853 C 339.731 119.657,338.667 119.268,338.667 117.989 C 338.667 116.710,333.267 115.384,326.667 115.042 L 314.667 114.421 314.667 190.741 M165.333 158.667 L 165.333 168.000 233.333 168.000 L 301.333 168.000 301.333 158.667 L 301.333 149.333 233.333 149.333 L 165.333 149.333 165.333 158.667 M165.333 190.667 L 165.333 200.000 233.333 200.000 L 301.333 200.000 301.333 190.667 L 301.333 181.333 233.333 181.333 L 165.333 181.333 165.333 190.667 M165.333 225.333 L 165.333 234.667 233.333 234.667 L 301.333 234.667 301.333 225.333 L 301.333 216.000 233.333 216.000 L 165.333 216.000 165.333 225.333 M165.333 257.333 L 165.333 266.667 233.333 266.667 L 301.333 266.667 301.333 257.333 L 301.333 248.000 233.333 248.000 L 165.333 248.000 165.333 257.333 M166.667 298.667 L 150.834 314.667 132.750 314.667 L 114.667 314.667 114.667 324.000 L 114.667 333.333 233.333 333.333 L 352.000 333.333 352.000 324.000 L 352.000 314.667 333.917 314.667 L 315.833 314.667 300.000 298.667 L 284.167 282.667 233.333 282.667 L 182.500 282.667 166.667 298.667 ",
                                  "name": "path0",
                                  "stroke": {
                                    "paint": "none"
                                  },
                                  "type": "path"
                                }
                              ],
                              "name": "svgg",
                              "type": "group"
                            }
                          ],
                          "viewBox": "0, 0, 380,400"
                        },
                        "type": "ia.shapes.svg"
                      },
                      {
                        "meta": {
                          "name": "Heating"
                        },
                        "position": {
                          "basis": "20px"
                        },
                        "propConfig": {
                          "position.display": {
                            "binding": {
                              "config": {
                                "struct": {
                                  "icon": "{view.params.currentParams.icon}",
                                  "type": "{view.params.currentParams.type}"
                                },
                                "waitOnAll": true
                              },
                              "transforms": [
                                {
                                  "code": "\t# If the value type is heatingControls and the user has not manually\n\t# selected an icon, or if the user manually selected the heatingControls,\n\t# icon, then display the heatingControls icon.\t\n\t\n\ticon \u003d value[\u0027icon\u0027]\n\ttype \u003d value[\u0027type\u0027]\n\t\n\tif len(icon) \u003d\u003d 0 and type\u003d\u003d\u0027heatingControls\u0027:\n\t\treturn True\n\telif icon \u003d\u003d \u0027heating_controls\u0027:\n\t\treturn True\n\telse:\n\t\treturn False\n\t\t",
                                  "type": "script"
                                }
                              ],
                              "type": "expr-struct"
                            }
                          },
                          "props.fill": {
                            "binding": {
                              "config": {
                                "path": "view.params.currentParams.icon"
                              },
                              "transforms": [
                                {
                                  "code": "\tif value \u003d\u003d \u0027heating_controls\u0027:\n\t\treturn \u0027var(--neutral-100)\u0027\n\telse:\n\t\treturn \u0027var(--neutral-60)\u0027",
                                  "type": "script"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "elements": [
                            {
                              "elements": [
                                {
                                  "d": "M76.838 5.376 C 77.526 12.786,79.839 19.796,83.572 25.793 C 95.193 44.458,95.193 50.073,83.572 68.738 C 79.839 74.735,77.526 81.745,76.838 89.155 L 76.338 94.531 88.381 94.531 L 100.424 94.531 101.332 89.753 C 101.969 86.402,103.527 82.843,106.551 77.839 C 120.066 55.468,120.066 39.063,106.551 16.692 C 103.527 11.688,101.969 8.130,101.332 4.778 L 100.424 0.000 88.381 -0.000 L 76.338 -0.000 76.838 5.376 M123.713 5.376 C 124.401 12.786,126.714 19.796,130.447 25.793 C 138.050 38.005,138.655 39.588,138.655 47.266 C 138.655 54.944,138.050 56.526,130.447 68.738 C 126.714 74.735,124.401 81.745,123.713 89.155 L 123.213 94.531 135.256 94.531 L 147.299 94.531 148.207 89.753 C 148.844 86.402,150.402 82.843,153.426 77.839 C 166.941 55.468,166.941 39.063,153.426 16.692 C 150.402 11.688,148.844 8.130,148.207 4.778 L 147.299 0.000 135.256 -0.000 L 123.213 -0.000 123.713 5.376 M170.588 5.376 C 171.276 12.786,173.589 19.796,177.322 25.793 C 184.925 38.005,185.530 39.588,185.530 47.266 C 185.530 54.944,184.925 56.526,177.322 68.738 C 173.589 74.735,171.276 81.745,170.588 89.155 L 170.088 94.531 182.131 94.531 L 194.174 94.531 195.082 89.753 C 195.719 86.402,197.277 82.843,200.301 77.839 C 213.816 55.468,213.816 39.063,200.301 16.692 C 197.277 11.688,195.719 8.130,195.082 4.778 L 194.174 0.000 182.131 -0.000 L 170.088 -0.000 170.588 5.376 M217.463 5.376 C 218.151 12.786,220.464 19.796,224.197 25.793 C 235.818 44.458,235.818 50.073,224.197 68.738 C 220.464 74.735,218.151 81.745,217.463 89.155 L 216.963 94.531 229.006 94.531 L 241.049 94.531 241.957 89.753 C 242.594 86.402,244.152 82.843,247.176 77.839 C 260.691 55.468,260.691 39.063,247.176 16.692 C 244.152 11.688,242.594 8.130,241.957 4.778 L 241.049 0.000 229.006 -0.000 L 216.963 -0.000 217.463 5.376 M264.338 5.376 C 265.026 12.786,267.339 19.796,271.072 25.793 C 282.693 44.458,282.693 50.073,271.072 68.738 C 267.339 74.735,265.026 81.745,264.338 89.155 L 263.838 94.531 275.881 94.531 L 287.924 94.531 288.832 89.753 C 289.469 86.402,291.027 82.843,294.051 77.839 C 307.566 55.468,307.566 39.063,294.051 16.692 C 291.027 11.688,289.469 8.130,288.832 4.778 L 287.924 0.000 275.881 -0.000 L 263.838 -0.000 264.338 5.376 M48.828 119.186 C 34.260 124.349,27.344 134.941,27.344 152.092 L 27.344 160.938 13.672 160.938 L 0.000 160.938 0.000 172.656 L 0.000 184.375 13.672 184.375 L 27.344 184.375 27.344 279.548 C 27.344 365.917,27.463 375.078,28.633 378.572 C 38.232 407.241,78.875 407.241,88.545 378.572 C 90.530 372.686,90.539 145.325,88.555 139.397 C 83.144 123.238,64.361 113.682,48.828 119.186 M140.234 119.186 C 130.416 122.666,123.235 129.851,120.039 139.397 C 118.062 145.300,118.062 372.668,120.039 378.572 C 129.638 407.241,170.281 407.241,179.951 378.572 C 181.937 372.686,181.946 145.325,179.961 139.397 C 174.551 123.238,155.767 113.682,140.234 119.186 M226.172 119.186 C 216.353 122.666,209.173 129.851,205.977 139.397 C 204.000 145.300,204.000 372.668,205.977 378.572 C 215.576 407.241,256.218 407.241,265.889 378.572 C 267.874 372.686,267.883 145.325,265.898 139.397 C 260.488 123.238,241.704 113.682,226.172 119.186 M312.109 119.186 C 302.291 122.666,295.110 129.851,291.914 139.397 C 289.937 145.300,289.937 372.668,291.914 378.572 C 301.513 407.241,342.156 407.241,351.826 378.572 C 353.009 375.066,353.125 366.213,353.125 279.548 L 353.125 184.375 376.563 184.375 L 400.000 184.375 400.000 158.594 L 400.000 132.813 388.281 132.813 L 376.563 132.813 376.563 146.875 L 376.563 160.938 364.844 160.938 L 353.125 160.938 353.125 152.092 C 353.125 127.843,333.075 111.757,312.109 119.186 ",
                                  "fill": {
                                    "rule": "evenodd"
                                  },
                                  "name": "path0",
                                  "stroke": {
                                    "paint": "none"
                                  },
                                  "type": "path"
                                }
                              ],
                              "name": "svgg",
                              "type": "group"
                            }
                          ],
                          "viewBox": "0, 0, 400,400"
                        },
                        "type": "ia.shapes.svg"
                      },
                      {
                        "meta": {
                          "name": "Fan"
                        },
                        "position": {
                          "basis": "20px"
                        },
                        "propConfig": {
                          "position.display": {
                            "binding": {
                              "config": {
                                "struct": {
                                  "icon": "{view.params.currentParams.icon}",
                                  "type": "{view.params.currentParams.type}"
                                },
                                "waitOnAll": true
                              },
                              "transforms": [
                                {
                                  "code": "\t# If the value type is fan and the user has not manually\n\t# selected an icon, or if the user manually selected the fan,\n\t# then display the fan icon.\n\t\n\ticon \u003d value[\u0027icon\u0027]\n\ttype \u003d value[\u0027type\u0027]\n\t\n\tif len(icon) \u003d\u003d 0 and type\u003d\u003d\u0027fan\u0027:\n\t\treturn True\n\telif icon \u003d\u003d \u0027fan\u0027:\n\t\treturn True\n\telse:\n\t\treturn False\n\t\t",
                                  "type": "script"
                                }
                              ],
                              "type": "expr-struct"
                            }
                          },
                          "props.fill": {
                            "binding": {
                              "config": {
                                "path": "view.params.currentParams.icon"
                              },
                              "transforms": [
                                {
                                  "code": "\tif value \u003d\u003d \u0027fan\u0027:\n\t\treturn \u0027var(--neutral-100)\u0027\n\telse:\n\t\treturn \u0027var(--neutral-60)\u0027",
                                  "type": "script"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "elements": [
                            {
                              "elements": [
                                {
                                  "d": "M2.060 2.060 L 0.000 4.119 -0.000 200.000 L -0.000 395.881 2.060 397.940 L 4.119 400.000 200.000 400.000 L 395.881 400.000 397.940 397.940 L 400.000 395.881 400.000 200.000 L 400.000 4.119 397.940 2.060 L 395.881 0.000 200.000 0.000 L 4.119 0.000 2.060 2.060 M35.999 20.344 C 46.520 25.711,43.284 41.225,31.485 41.983 C 25.920 42.340,22.695 40.608,20.344 35.999 C 15.089 25.699,25.699 15.089,35.999 20.344 M216.797 40.642 C 349.313 55.450,407.337 215.536,314.871 311.225 C 231.272 397.738,85.829 364.184,47.793 249.609 C 11.617 140.635,102.790 27.903,216.797 40.642 M144.752 63.666 C 136.881 65.853,123.572 73.609,108.012 85.076 C 103.035 88.744,101.217 91.868,102.097 95.234 C 102.316 96.071,117.002 116.558,134.733 140.760 C 164.972 182.034,166.925 184.896,166.222 186.913 C 165.314 189.517,165.809 189.508,157.755 187.071 C 86.714 165.584,48.947 176.409,53.152 217.055 C 54.229 227.460,61.247 252.638,64.420 257.481 C 67.006 261.428,67.021 261.424,123.176 242.944 C 185.614 222.395,182.907 222.771,173.669 235.942 C 129.872 298.386,130.623 339.135,175.687 345.403 C 178.858 345.844,188.465 346.268,197.037 346.345 L 212.622 346.484 214.514 344.292 L 216.406 342.100 216.406 287.476 L 216.406 232.853 218.711 231.661 C 219.979 231.005,221.167 230.469,221.351 230.469 C 221.535 230.469,223.725 233.193,226.218 236.523 C 271.149 296.552,310.673 308.074,330.341 266.878 C 335.696 255.661,342.495 234.660,341.686 231.837 C 340.530 227.808,338.494 227.005,290.625 211.691 C 265.059 203.513,243.022 196.462,241.656 196.024 C 239.522 195.340,239.059 194.708,238.384 191.559 C 237.457 187.242,237.274 187.461,243.750 185.145 C 313.254 160.289,335.621 128.208,304.746 97.656 C 295.907 88.911,277.422 75.041,273.826 74.458 C 269.440 73.746,268.855 74.450,236.855 118.911 L 206.294 161.374 202.952 161.061 C 198.594 160.652,198.464 160.364,198.449 151.112 C 198.356 89.779,176.846 54.749,144.752 63.666 M206.900 180.893 C 226.988 186.858,222.889 216.532,201.953 216.704 C 180.127 216.884,176.759 185.600,198.047 180.418 C 201.632 179.545,202.523 179.593,206.900 180.893 M375.554 359.347 C 380.921 362.619,382.712 370.841,379.111 375.665 C 371.587 385.742,357.222 380.899,358.015 368.554 C 358.586 359.655,367.975 354.726,375.554 359.347 ",
                                  "name": "path0",
                                  "stroke": {
                                    "paint": "none"
                                  },
                                  "type": "path"
                                }
                              ],
                              "name": "svgg",
                              "type": "group"
                            }
                          ],
                          "viewBox": "0, 0, 400,400"
                        },
                        "type": "ia.shapes.svg"
                      },
                      {
                        "meta": {
                          "name": "Compressor"
                        },
                        "position": {
                          "basis": "20px"
                        },
                        "propConfig": {
                          "position.display": {
                            "binding": {
                              "config": {
                                "struct": {
                                  "icon": "{view.params.currentParams.icon}",
                                  "type": "{view.params.currentParams.type}"
                                },
                                "waitOnAll": true
                              },
                              "transforms": [
                                {
                                  "code": "\t# If the value type is compressor and the user has not manually\n\t# selected an icon, or if the user manually selected the compressor,\n\t# then display the compressor icon.\t\n\t\n\ticon \u003d value[\u0027icon\u0027]\n\ttype \u003d value[\u0027type\u0027]\n\t\n\tif len(icon) \u003d\u003d 0 and type\u003d\u003d\u0027compressor\u0027:\n\t\treturn True\n\telif icon \u003d\u003d \u0027compressor\u0027:\n\t\treturn True\n\telse:\n\t\treturn False\n\t\t",
                                  "type": "script"
                                }
                              ],
                              "type": "expr-struct"
                            }
                          },
                          "props.elements[0].elements[0].fill.paint": {
                            "binding": {
                              "config": {
                                "path": "view.params.currentParams.icon"
                              },
                              "transforms": [
                                {
                                  "code": "\tif value \u003d\u003d \u0027compressor\u0027:\n\t\treturn \u0027var(--neutral-100)\u0027\n\telse:\n\t\treturn \u0027var(--neutral-60)\u0027",
                                  "type": "script"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "elements": [
                            {
                              "elements": [
                                {
                                  "d": "M138.462 35.897 C 138.462 43.305,139.530 46.154,142.308 46.154 C 145.360 46.154,146.154 49.858,146.154 64.103 L 146.154 82.051 156.410 82.051 L 166.667 82.051 166.667 64.103 C 166.667 47.863,167.155 46.154,171.795 46.154 C 176.068 46.154,176.923 44.444,176.923 35.897 L 176.923 25.641 157.692 25.641 L 138.462 25.641 138.462 35.897 M307.692 80.769 C 307.692 87.037,308.852 89.744,311.538 89.744 C 314.637 89.744,315.385 93.732,315.385 110.256 L 315.385 130.769 326.923 130.769 L 338.462 130.769 338.462 110.256 C 338.462 93.732,339.209 89.744,342.308 89.744 C 344.994 89.744,346.154 87.037,346.154 80.769 L 346.154 71.795 326.923 71.795 L 307.692 71.795 307.692 80.769 M90.314 91.171 C 78.777 99.252,84.379 100.000,156.410 100.000 C 228.441 100.000,234.043 99.252,222.506 91.171 C 214.042 85.242,98.779 85.242,90.314 91.171 M76.071 109.781 C 72.199 114.060,71.795 126.632,71.795 242.965 L 71.795 371.423 77.576 376.096 C 80.755 378.666,84.769 383.942,86.495 387.821 L 89.634 394.872 156.442 394.872 L 223.250 394.872 228.545 385.897 C 231.457 380.962,234.695 376.923,235.739 376.923 C 238.840 376.923,243.590 364.440,243.590 356.290 L 243.590 348.718 282.011 348.718 L 320.432 348.718 328.494 341.514 C 335.040 335.666,336.796 331.818,337.830 321.060 L 339.103 307.809 350.962 304.463 L 362.821 301.117 363.534 265.943 L 364.247 230.769 325.713 230.769 L 287.179 230.769 287.179 265.313 L 287.179 299.857 301.282 303.956 C 314.837 307.897,315.385 308.397,315.385 316.849 L 315.385 325.641 279.487 325.641 L 243.590 325.641 243.552 222.436 C 243.523 144.398,242.724 117.668,240.272 112.821 L 237.030 106.410 158.689 105.733 C 85.341 105.099,80.075 105.357,76.071 109.781 M298.718 141.946 L 288.462 145.036 288.462 164.185 L 288.462 183.333 326.282 184.043 L 364.103 184.752 364.103 164.476 L 364.103 144.199 352.711 141.330 C 338.164 137.667,311.926 137.966,298.718 141.946 M248.718 206.410 L 248.718 223.077 314.103 223.077 L 379.487 223.077 379.487 206.410 L 379.487 189.744 314.103 189.744 L 248.718 189.744 248.718 206.410 M15.385 408.974 L 15.385 425.641 156.410 425.641 L 297.436 425.641 297.436 408.974 L 297.436 392.308 281.167 392.308 C 268.154 392.308,263.968 393.334,260.256 397.436 C 255.770 402.394,252.359 402.564,157.692 402.564 C 63.026 402.564,59.615 402.394,55.128 397.436 C 51.348 393.259,47.231 392.308,32.936 392.308 L 15.385 392.308 15.385 408.974 ",
                                  "fill": {
                                    "rule": "evenodd"
                                  },
                                  "name": "path0",
                                  "stroke": {
                                    "paint": "none"
                                  },
                                  "type": "path"
                                }
                              ],
                              "name": "svgg",
                              "type": "group"
                            }
                          ],
                          "viewBox": "0, 0, 400,456.4102564102564"
                        },
                        "type": "ia.shapes.svg"
                      },
                      {
                        "meta": {
                          "name": "Other"
                        },
                        "position": {
                          "basis": "20px"
                        },
                        "propConfig": {
                          "position.display": {
                            "binding": {
                              "config": {
                                "path": "view.params.currentParams.icon"
                              },
                              "transforms": [
                                {
                                  "code": "\t# If the user has manually configured an icon and it is not one of the\n\t# built-in icons, then display this icon component.\n\t\n\tif len(value) \u003e 0 and value not in [\u0027heating_controls\u0027,\u0027fan\u0027,\u0027condenser\u0027,\u0027economizer\u0027,\u0027compressor\u0027,\u0027temperature\u0027,\u0027pressure\u0027]:\n\t\treturn True\n\telse:\n\t\treturn False",
                                  "type": "script"
                                }
                              ],
                              "type": "property"
                            }
                          },
                          "props.path": {
                            "binding": {
                              "config": {
                                "expression": "\u0027material/\u0027 + {view.params.currentParams.icon}"
                              },
                              "type": "expr"
                            }
                          }
                        },
                        "props": {
                          "style": {
                            "classes": ""
                          }
                        },
                        "type": "ia.display.icon"
                      },
                      {
                        "meta": {
                          "name": "Fallback"
                        },
                        "position": {
                          "basis": "20px"
                        },
                        "propConfig": {
                          "position.display": {
                            "binding": {
                              "config": {
                                "struct": {
                                  "ac": "{view.params.currentParams.ac}",
                                  "icon": "{view.params.currentParams.icon}",
                                  "name": "{view.params.currentParams.name}",
                                  "type": "{view.params.currentParams.type}"
                                },
                                "waitOnAll": true
                              },
                              "transforms": [
                                {
                                  "code": "\t# If the user has not manually configured an icon and one of the\n\t# built-in icons is not visible, then this \u0027fallback\u0027 icon will\n\t# be displayed.\n\t\n\ticon \u003d value[\u0027icon\u0027]\n\t\n\tif len(icon) \u003e 0:\n\t\treturn False\n\telse:\n\t\tac \u003d value[\u0027ac\u0027]\n\t\ttype \u003d value[\u0027type\u0027]\n\t\tname \u003d value[\u0027name\u0027]\n\t\t\n\t\tif ac \u003d\u003d -1:\n\t\t\treturn False\n\t\telif ac in [1,2] and type !\u003d \u0027other\u0027:\n\t\t\treturn False\n\t\telif ac in [1,2] and type \u003d\u003d \u0027other\u0027:\n\t\t\tif \u0027pressure\u0027 in name.lower() or \u0027temp\u0027 in name.lower() or \u0027differential\u0027 in name.lower():\n\t\t\t\treturn False\n\t\t\telse:\n\t\t\t\treturn True\n\t\telif ac \u003d\u003d 3:\n\t\t\tif \u0027temp\u0027 in name.lower():\n\t\t\t\treturn False\n\t\t\telse:\n\t\t\t\treturn True",
                                  "type": "script"
                                }
                              ],
                              "type": "expr-struct"
                            }
                          },
                          "props.path": {
                            "binding": {
                              "config": {
                                "struct": {
                                  "ac": "{view.params.currentParams.ac}",
                                  "icon": "{view.params.currentParams.icon}",
                                  "name": "{view.params.currentParams.name}",
                                  "type": "{view.params.currentParams.type}"
                                },
                                "waitOnAll": true
                              },
                              "transforms": [
                                {
                                  "code": "\t# If the user has not manually configured an icon, then this displays\n\t# a \u0027fallback\u0027 icon (the icon displayed depends on the values of the\n\t# params).\n\t\n\ticon \u003d value[\u0027icon\u0027]\n\t\n\tif len(icon) \u003e 0:\n\t\treturn \u0027material/info\u0027\n\telse:\n\t\tac \u003d value[\u0027ac\u0027]\n\t\ttype \u003d value[\u0027type\u0027]\n\t\tname \u003d value[\u0027name\u0027]\n\t\t\n\t\tif ac \u003d\u003d -1:\n\t\t\treturn \u0027material/info\u0027\n\t\telif ac in [1,2] and type !\u003d \u0027other\u0027:\n\t\t\treturn \u0027material/info\u0027\n\t\telif ac in [1,2] and type \u003d\u003d \u0027other\u0027:\n\t\t\tif \u0027smoke\u0027 in name.lower():\n\t\t\t\treturn \u0027material/smoke_free\u0027\n\t\t\telif \u0027cold\u0027 in name.lower():\n\t\t\t\treturn \u0027material/ac_unit\u0027\n\t\t\telif \u0027hot\u0027 in name.lower():\n\t\t\t\treturn \u0027material/whatshot\u0027\n\t\t\telse:\n\t\t\t\treturn \u0027material/info\u0027\n\t\telif ac \u003d\u003d 3:\n\t\t\tif \u0027cooling\u0027 in name.lower() or \u0027peak\u0027 in name.lower():\n\t\t\t\treturn \u0027material/ac_unit\u0027\n\t\t\telif \u0027heating\u0027 in name.lower():\n\t\t\t\treturn \u0027material/whatshot\u0027\n\t\t\telse:\n\t\t\t\treturn \u0027material/info\u0027",
                                  "type": "script"
                                }
                              ],
                              "type": "expr-struct"
                            }
                          }
                        },
                        "props": {
                          "color": "var(--neutral-60)",
                          "style": {
                            "classes": ""
                          }
                        },
                        "type": "ia.display.icon"
                      },
                      {
                        "meta": {
                          "name": "Temp"
                        },
                        "position": {
                          "basis": "17px"
                        },
                        "propConfig": {
                          "position.display": {
                            "binding": {
                              "config": {
                                "struct": {
                                  "ac": "{view.params.currentParams.ac}",
                                  "icon": "{view.params.currentParams.icon}",
                                  "name": "{view.params.currentParams.name}",
                                  "type": "{view.params.currentParams.type}"
                                },
                                "waitOnAll": true
                              },
                              "transforms": [
                                {
                                  "code": "\t# If the user selected the \u0027temperature\u0027 icon, or if the user\n\t# did not manually configure an icon and \u0027temp\u0027 or \u0027differential\u0027\n\t# is in the name of the tag, then display the \u0027temperature\u0027 icon.\n\t\n\ticon \u003d value[\u0027icon\u0027]\n\t\n\tif icon \u003d\u003d \u0027temperature\u0027:\n\t\treturn True\n\telif len(icon) \u003e 0:\n\t\treturn False\n\telse:\n\t\tac \u003d value[\u0027ac\u0027]\n\t\ttype \u003d value[\u0027type\u0027]\n\t\tname \u003d value[\u0027name\u0027]\n\t\t\n\t\tif ac in [1,2] and type \u003d\u003d \u0027other\u0027:\n\t\t\tif \u0027temp\u0027 in name.lower() or \u0027differential\u0027 in name.lower():\n\t\t\t\treturn True\n\t\t\telse:\n\t\t\t\treturn False\n\t\telif ac \u003d\u003d 3:\n\t\t\tif \u0027temp\u0027 in name.lower():\n\t\t\t\treturn True\n\t\t\telse:\n\t\t\t\treturn False\n\t\telse:\n\t\t\treturn False",
                                  "type": "script"
                                }
                              ],
                              "type": "expr-struct"
                            }
                          },
                          "props.fill": {
                            "binding": {
                              "config": {
                                "path": "view.params.currentParams.icon"
                              },
                              "transforms": [
                                {
                                  "code": "\tif value \u003d\u003d \u0027temperature\u0027:\n\t\treturn \u0027var(--neutral-100)\u0027\n\telse:\n\t\treturn \u0027var(--neutral-60)\u0027",
                                  "type": "script"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "elements": [
                            {
                              "elements": [
                                {
                                  "d": "M144.048 10.648 C 125.104 15.233,105.516 30.536,97.002 47.402 C 88.290 64.661,88.465 61.620,88.442 196.594 L 88.421 319.505 78.768 326.100 C -46.420 411.638,30.421 612.439,180.600 592.205 C 314.696 574.138,355.079 398.230,241.754 325.819 L 234.386 321.111 234.365 197.398 C 234.348 93.281,234.016 72.292,232.273 64.898 C 222.904 25.162,183.694 1.051,144.048 10.648 M173.869 47.098 C 178.988 48.618,183.297 51.289,188.021 55.870 C 199.915 67.403,199.298 58.922,199.298 210.840 L 199.298 343.977 208.458 348.087 C 313.658 395.287,277.780 557.111,162.105 557.153 C 46.248 557.194,10.044 396.928,114.693 347.268 L 124.858 342.444 125.236 206.661 L 125.614 70.877 128.649 65.263 C 137.607 48.692,155.301 41.584,173.869 47.098 M282.484 65.239 C 269.521 70.874,269.205 90.873,281.973 97.476 C 289.211 101.218,366.765 100.648,373.067 96.806 C 384.229 90.001,384.049 72.698,372.744 65.804 C 367.029 62.319,290.306 61.838,282.484 65.239 M281.121 138.891 C 268.860 146.366,269.853 165.204,282.793 170.611 C 290.877 173.988,365.364 173.525,371.952 170.056 C 385.034 163.168,384.217 145.491,370.498 138.599 C 362.680 134.671,287.640 134.916,281.121 138.891 M157.953 210.133 C 144.631 213.582,144.561 214.001,144.561 290.813 L 144.561 357.342 134.950 360.344 C 69.024 380.940,49.040 463.478,98.158 512.300 C 155.262 569.058,252.901 527.949,252.911 447.143 C 252.916 406.707,223.659 368.489,185.614 359.237 L 179.649 357.787 179.649 291.035 C 179.649 218.989,179.529 217.740,172.139 212.898 C 168.441 210.475,161.705 209.162,157.953 210.133 M282.484 211.204 C 269.121 217.013,268.924 236.692,282.159 243.537 C 288.470 246.800,364.573 246.573,371.533 243.270 C 385.167 236.800,384.575 218.654,370.498 211.581 C 363.915 208.274,289.953 207.956,282.484 211.204 M300.729 284.148 C 288.098 289.745,287.077 307.480,298.927 315.465 C 305.997 320.230,367.735 319.817,374.287 314.961 C 383.136 308.402,383.655 296.900,375.505 288.002 L 370.747 282.807 338.005 282.473 C 312.086 282.209,304.318 282.558,300.729 284.148 ",
                                  "name": "path0",
                                  "stroke": {
                                    "paint": "none"
                                  },
                                  "type": "path"
                                }
                              ],
                              "name": "svgg",
                              "type": "group"
                            }
                          ],
                          "viewBox": "0, 0, 400,610.5263157894738"
                        },
                        "type": "ia.shapes.svg"
                      },
                      {
                        "meta": {
                          "name": "Pressure"
                        },
                        "position": {
                          "basis": "25px"
                        },
                        "propConfig": {
                          "position.display": {
                            "binding": {
                              "config": {
                                "struct": {
                                  "ac": "{view.params.currentParams.ac}",
                                  "icon": "{view.params.currentParams.icon}",
                                  "name": "{view.params.currentParams.name}",
                                  "type": "{view.params.currentParams.type}"
                                },
                                "waitOnAll": true
                              },
                              "transforms": [
                                {
                                  "code": "\t# If the user selected the \u0027pressure\u0027 icon, or if the user\n\t# did not manually configure an icon and \u0027pressure\u0027 is in\n\t# the name of the tag, then display the \u0027pressure\u0027 icon.\t\n\t\n\ticon \u003d value[\u0027icon\u0027]\n\t\n\tif icon \u003d\u003d \u0027pressure\u0027:\n\t\treturn True\n\telif len(icon) \u003e 0:\n\t\treturn False\n\telse:\n\t\tac \u003d value[\u0027ac\u0027]\n\t\ttype \u003d value[\u0027type\u0027]\n\t\tname \u003d value[\u0027name\u0027]\n\t\t\n\t\tif ac in [1,2] and type \u003d\u003d \u0027other\u0027:\n\t\t\tif \u0027pressure\u0027 in name.lower():\n\t\t\t\treturn True\n\t\t\telse:\n\t\t\t\treturn False\n\t\telse:\n\t\t\treturn False",
                                  "type": "script"
                                }
                              ],
                              "type": "expr-struct"
                            }
                          },
                          "props.fill": {
                            "binding": {
                              "config": {
                                "path": "view.params.currentParams.icon"
                              },
                              "transforms": [
                                {
                                  "code": "\tif value \u003d\u003d \u0027pressure\u0027:\n\t\treturn \u0027var(--neutral-100)\u0027\n\telse:\n\t\treturn \u0027var(--neutral-60)\u0027",
                                  "type": "script"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "elements": [
                            {
                              "elements": [
                                {
                                  "d": "M183.413 7.262 C 66.343 18.645,-11.647 135.883,23.870 247.094 C 51.951 335.023,140.033 389.462,229.698 374.308 C 370.280 350.547,433.111 186.590,344.225 75.453 C 306.658 28.482,242.961 1.472,183.413 7.262 M220.428 42.576 C 330.798 57.751,387.107 182.409,325.551 275.297 C 262.037 371.138,116.410 361.859,65.578 258.732 C 12.278 150.598,101.389 26.208,220.428 42.576 M194.550 77.595 L 194.728 91.269 200.329 91.269 L 205.931 91.269 206.109 77.595 L 206.287 63.921 200.329 63.921 L 194.372 63.921 194.550 77.595 M136.642 80.425 C 130.423 84.051,130.281 82.943,138.850 97.694 C 145.240 108.693,144.619 108.299,150.020 104.770 C 155.451 101.222,155.458 101.516,149.694 91.493 C 141.291 76.883,141.872 77.375,136.642 80.425 M256.709 81.940 C 252.814 88.029,246.467 99.788,246.463 100.924 C 246.458 102.078,253.124 106.872,254.919 107.005 C 257.056 107.164,269.579 85.649,268.433 83.788 C 267.649 82.516,261.080 78.418,259.823 78.418 C 259.350 78.418,257.948 80.003,256.709 81.940 M90.721 125.371 C 88.410 128.457,86.838 131.780,87.219 132.773 C 87.527 133.576,96.983 139.461,105.622 144.226 L 109.433 146.328 111.224 144.365 C 113.851 141.484,116.397 136.554,115.630 135.833 C 114.392 134.668,94.010 123.229,93.173 123.229 C 92.706 123.229,91.603 124.193,90.721 125.371 M297.943 128.320 C 293.096 131.138,288.123 134.333,286.891 135.420 L 284.652 137.397 287.233 141.435 C 290.296 146.226,290.779 146.590,292.738 145.591 C 296.512 143.666,314.333 132.856,314.333 132.491 C 314.333 131.443,308.617 123.538,307.743 123.377 C 307.199 123.278,302.789 125.502,297.943 128.320 M152.275 133.278 C 152.948 136.269,156.635 151.763,160.466 167.710 C 170.528 209.586,169.821 205.226,167.596 211.708 C 155.338 247.412,198.775 275.168,225.179 248.503 C 244.857 228.630,234.108 195.203,206.239 189.607 L 201.977 188.752 184.308 167.028 C 159.645 136.706,152.248 127.842,151.605 127.842 C 151.299 127.842,151.601 130.288,152.275 133.278 M72.488 191.763 L 72.488 197.720 86.161 197.542 L 99.835 197.364 99.835 191.763 L 99.835 186.161 86.161 185.983 L 72.488 185.805 72.488 191.763 M301.153 191.763 L 301.153 197.694 314.662 197.694 L 328.171 197.694 328.171 191.763 L 328.171 185.832 314.662 185.832 L 301.153 185.832 301.153 191.763 M78.510 223.876 C 75.668 224.224,75.752 224.683,81.112 238.208 C 99.240 283.946,141.602 315.745,188.754 319.006 C 233.921 322.131,271.079 306.684,299.075 273.147 C 310.305 259.695,324.217 232.659,324.217 224.290 C 324.217 223.546,318.515 223.394,290.610 223.394 L 257.002 223.394 257.002 226.631 C 257.002 248.857,238.616 272.268,216.039 278.790 C 181.598 288.739,143.657 261.218,143.657 226.286 L 143.657 223.394 112.191 223.499 C 94.885 223.557,79.728 223.727,78.510 223.876 ",
                                  "name": "path0",
                                  "stroke": {
                                    "paint": "none"
                                  },
                                  "type": "path"
                                }
                              ],
                              "name": "svgg",
                              "type": "group"
                            }
                          ],
                          "viewBox": "0, 0, 400,384.18451400329485"
                        },
                        "type": "ia.shapes.svg"
                      }
                    ],
                    "meta": {
                      "name": "Name Cont"
                    },
                    "position": {
                      "basis": "245px"
                    },
                    "type": "ia.container.flex"
                  },
                  {
                    "events": {
                      "dom": {
                        "onClick": {
                          "config": {
                            "script": "\t# Open the \u0027change icon\u0027 popup to give the user the ability to select an icon.\n\t\n\tsystem.perspective.openPopup(\u0027change-icon\u0027,\u0027Building Automation Demo/Page/Systems Overview/Framework/Dashboard/Widgets/Single Status/Framework/Icon Selector/Change Icon\u0027, params \u003d {\u0027material\u0027:self.view.params.currentParams.icon},modal\u003dTrue,showCloseIcon\u003dFalse,draggable\u003dFalse)"
                          },
                          "scope": "G",
                          "type": "script"
                        },
                        "onMouseEnter": {
                          "config": {
                            "script": "\tself.props.fill \u003d \u0027var(--neutral-100)\u0027"
                          },
                          "scope": "G",
                          "type": "script"
                        },
                        "onMouseLeave": {
                          "config": {
                            "script": "\tself.props.fill \u003d \u0027var(--neutral-50)\u0027"
                          },
                          "scope": "G",
                          "type": "script"
                        }
                      }
                    },
                    "meta": {
                      "name": "Edit",
                      "tooltip": {
                        "delay": 800,
                        "enabled": true,
                        "text": "CHANGE ICON"
                      }
                    },
                    "position": {
                      "basis": "25px"
                    },
                    "props": {
                      "elements": [
                        {
                          "d": "M0 0h24v24H0z",
                          "fill": {
                            "paint": "none"
                          },
                          "name": "path",
                          "type": "path"
                        },
                        {
                          "d": "M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z",
                          "name": "path",
                          "type": "path"
                        }
                      ],
                      "fill": "var(--neutral-50)",
                      "style": {
                        "cursor": "pointer",
                        "transition": "fill 0.25s linear"
                      },
                      "viewBox": "0 0 24 24"
                    },
                    "type": "ia.shapes.svg"
                  }
                ],
                "meta": {
                  "name": "Icon Cont"
                },
                "position": {
                  "basis": "270px"
                },
                "props": {
                  "style": {
                    "borderBottomColor": "--neutral-50",
                    "borderBottomStyle": "solid",
                    "borderBottomWidth": "1px"
                  }
                },
                "type": "ia.container.flex"
              },
              {
                "meta": {
                  "name": "Display"
                },
                "position": {
                  "basis": "165px",
                  "grow": 1
                },
                "propConfig": {
                  "props.selected": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.params.currentParams.iconVisible"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "checkedIcon": {
                    "color": {
                      "enabled": "--neutral-100"
                    },
                    "style": {
                      "transition": "fill 0s"
                    }
                  },
                  "text": "Icon Visible",
                  "textPosition": "left"
                },
                "type": "ia.input.checkbox"
              }
            ],
            "meta": {
              "name": "Icon Cont"
            },
            "position": {
              "grow": 1
            },
            "propConfig": {
              "custom.icon": {
                "binding": {
                  "config": {
                    "bidirectional": true,
                    "path": "view.params.currentParams.icon"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "style": {
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "Icon"
        },
        "position": {
          "basis": "55px"
        },
        "props": {
          "direction": "column",
          "style": {
            "marginTop": "35px",
            "overflow": "hidden"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Title"
            },
            "props": {
              "style": {
                "fontSize": "15px",
                "white-space": "nowrap"
              },
              "text": "AHU"
            },
            "type": "ia.display.label"
          },
          {
            "children": [
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\tself.parent.updateParams(1)"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "AHU 1"
                },
                "position": {
                  "basis": "50%",
                  "grow": 1
                },
                "propConfig": {
                  "props.style.backgroundColor": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.ac}\u003d1,\u0027--neutral-100\u0027,\u0027--neutral-10\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.color": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.ac}\u003d1,\u0027--neutral-10\u0027,\u0027--neutral-90\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.cursor": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.ac}\u003d1,\u0027auto\u0027,\u0027pointer\u0027)"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "style": {
                    "borderRightColor": "--neutral-80",
                    "borderRightStyle": "solid",
                    "borderRightWidth": 1,
                    "fontSize": "12px",
                    "textAlign": "center"
                  },
                  "text": "AHU1"
                },
                "type": "ia.display.label"
              },
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\tself.parent.updateParams(2)"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "AHU 2"
                },
                "position": {
                  "basis": "50%",
                  "grow": 1
                },
                "propConfig": {
                  "props.style.backgroundColor": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.ac}\u003d2,\u0027--neutral-100\u0027,\u0027--neutral-10\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.color": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.ac}\u003d2,\u0027--neutral-10\u0027,\u0027--neutral-90\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.cursor": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.ac}\u003d2,\u0027auto\u0027,\u0027pointer\u0027)"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "style": {
                    "borderRightColor": "--neutral-80",
                    "borderRightStyle": "solid",
                    "borderRightWidth": 1,
                    "fontSize": "12px",
                    "textAlign": "center"
                  },
                  "text": "AHU2"
                },
                "type": "ia.display.label"
              },
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\tself.parent.updateParams(3)"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "Other"
                },
                "position": {
                  "basis": "50%",
                  "grow": 1
                },
                "propConfig": {
                  "props.style.backgroundColor": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.ac}\u003d3,\u0027--neutral-100\u0027,\u0027--neutral-10\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.color": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.ac}\u003d3,\u0027--neutral-10\u0027,\u0027--neutral-90\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.cursor": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.ac}\u003d3,\u0027auto\u0027,\u0027pointer\u0027)"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "style": {
                    "fontSize": "12px",
                    "textAlign": "center"
                  },
                  "text": "Other"
                },
                "type": "ia.display.label"
              }
            ],
            "meta": {
              "name": "AHU Options"
            },
            "position": {
              "basis": "35px"
            },
            "props": {
              "justify": "space-evenly",
              "style": {
                "borderColor": "--neutral-80",
                "borderStyle": "solid",
                "borderWidth": 1,
                "marginTop": "10px"
              }
            },
            "scripts": {
              "customMethods": [
                {
                  "name": "updateParams",
                  "params": [
                    "ac"
                  ],
                  "script": "\t# Update the current AC (AHU) param, and clear out the other\n\t# params (if needed).\t\n\t\n\tself.view.params.currentParams.ac \u003d ac\n\n\tif ac \u003d\u003d 3:\n\t\tif self.view.params.currentParams.type !\u003d \u0027other\u0027:\n\t\t\tself.view.params.currentParams.type \u003d \u0027other\u0027\n\telse:\n\t\tif self.view.params.currentParams.type !\u003d \u0027\u0027:\n\t\t\tself.view.params.currentParams.type \u003d \u0027\u0027\n\t\n\tif len(self.view.params.currentParams.path) \u003e 0:\n\t\tself.view.params.currentParams.path \u003d \u0027\u0027\n\t\t\n\tif self.view.params.currentParams.lowThreshold !\u003d \u0027\u0027:\n\t\tself.view.params.currentParams.lowThreshold \u003d \u0027\u0027\n\t\t\n\tif self.view.params.currentParams.highThreshold !\u003d \u0027\u0027:\n\t\tself.view.params.currentParams.highThreshold \u003d \u0027\u0027\n\t\t\n\tif self.view.params.currentParams.units !\u003d \u0027\u0027:\n\t\tself.view.params.currentParams.units \u003d \u0027\u0027\n\t\t\n\tif len(self.view.params.currentParams.mappings) \u003e 0:\n\t\tself.view.params.currentParams.mappings \u003d []\n\t\n\tif self.view.params.currentParams.numberFormat !\u003d \u0027\u0027:\n\t\tself.view.params.currentParams.numberFormat \u003d \u0027\u0027\n\t\t\n\tif self.view.params.currentParams.name !\u003d \u0027\u0027:\n\t\tself.view.params.currentParams.name \u003d \u0027\u0027\n\t\t\t\n\tif self.view.params.currentParams.compressor !\u003d -1:\n\t\tself.view.params.currentParams.compressor \u003d -1"
                }
              ],
              "extensionFunctions": null,
              "messageHandlers": []
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "AHU"
        },
        "position": {
          "basis": "60px"
        },
        "propConfig": {
          "custom.currAC": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.params.currentParams.ac"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "direction": "column",
          "style": {
            "marginTop": "35px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Title"
            },
            "props": {
              "style": {
                "fontSize": "15px",
                "white-space": "nowrap"
              },
              "text": "Unit"
            },
            "type": "ia.display.label"
          },
          {
            "children": [
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\tself.parent.updateParams(\u0027fan\u0027)"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "Fan"
                },
                "position": {
                  "basis": "14.29%",
                  "grow": 1
                },
                "propConfig": {
                  "props.style.backgroundColor": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.type}\u003d\u0027fan\u0027,\u0027--neutral-100\u0027,\u0027--neutral-10\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.color": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.type}\u003d\u0027fan\u0027,\u0027--neutral-10\u0027,\u0027--neutral-90\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.cursor": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.type}\u003d\u0027fan\u0027,\u0027auto\u0027,\u0027pointer\u0027)"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "style": {
                    "borderRightColor": "--neutral-80",
                    "borderRightStyle": "solid",
                    "borderRightWidth": 1,
                    "fontSize": "12px",
                    "textAlign": "center"
                  },
                  "text": "Fan"
                },
                "type": "ia.display.label"
              },
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\tself.parent.updateParams(\u0027condenser\u0027)"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "Condenser"
                },
                "position": {
                  "basis": "14.29%",
                  "grow": 1
                },
                "propConfig": {
                  "props.style.backgroundColor": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.type}\u003d\u0027condenser\u0027,\u0027--neutral-100\u0027,\u0027--neutral-10\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.color": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.type}\u003d\u0027condenser\u0027,\u0027--neutral-10\u0027,\u0027--neutral-90\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.cursor": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.type}\u003d\u0027condenser\u0027,\u0027auto\u0027,\u0027pointer\u0027)"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "style": {
                    "borderRightColor": "--neutral-80",
                    "borderRightStyle": "solid",
                    "borderRightWidth": 1,
                    "fontSize": "12px",
                    "textAlign": "center"
                  },
                  "text": "Condenser"
                },
                "type": "ia.display.label"
              },
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\tself.parent.updateParams(\u0027compressor\u0027)"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "Compressor"
                },
                "position": {
                  "basis": "14.29%",
                  "grow": 1
                },
                "propConfig": {
                  "props.style.backgroundColor": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.type}\u003d\u0027compressor\u0027,\u0027--neutral-100\u0027,\u0027--neutral-10\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.color": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.type}\u003d\u0027compressor\u0027,\u0027--neutral-10\u0027,\u0027--neutral-90\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.cursor": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.type}\u003d\u0027compressor\u0027,\u0027auto\u0027,\u0027pointer\u0027)"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "style": {
                    "borderRightColor": "--neutral-80",
                    "borderRightStyle": "solid",
                    "borderRightWidth": 1,
                    "fontSize": "12px",
                    "textAlign": "center"
                  },
                  "text": "Compressor"
                },
                "type": "ia.display.label"
              },
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\tself.parent.updateParams(\u0027economizer\u0027)"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "Economizer"
                },
                "position": {
                  "basis": "14.29%",
                  "grow": 1
                },
                "propConfig": {
                  "position.display": {
                    "binding": {
                      "config": {
                        "expression": "{view.params.currentParams.ac}\u003d1"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.backgroundColor": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.type}\u003d\u0027economizer\u0027,\u0027--neutral-100\u0027,\u0027--neutral-10\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.color": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.type}\u003d\u0027economizer\u0027,\u0027--neutral-10\u0027,\u0027--neutral-90\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.cursor": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.type}\u003d\u0027economizer\u0027,\u0027auto\u0027,\u0027pointer\u0027)"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "style": {
                    "borderRightColor": "--neutral-80",
                    "borderRightStyle": "solid",
                    "borderRightWidth": 1,
                    "fontSize": "12px",
                    "textAlign": "center"
                  },
                  "text": "Economizer"
                },
                "type": "ia.display.label"
              },
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\tself.parent.updateParams(\u0027heatingControls\u0027)"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "Heating Controls"
                },
                "position": {
                  "basis": "14.29%",
                  "grow": 1
                },
                "propConfig": {
                  "position.display": {
                    "binding": {
                      "config": {
                        "expression": "{view.params.currentParams.ac}\u003d2"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.backgroundColor": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.type}\u003d\u0027heatingControls\u0027,\u0027--neutral-100\u0027,\u0027--neutral-10\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.color": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.type}\u003d\u0027heatingControls\u0027,\u0027--neutral-10\u0027,\u0027--neutral-90\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.cursor": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.type}\u003d\u0027heatingControls\u0027,\u0027auto\u0027,\u0027pointer\u0027)"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "style": {
                    "borderRightColor": "--neutral-80",
                    "borderRightStyle": "solid",
                    "borderRightWidth": 1,
                    "fontSize": "12px",
                    "textAlign": "center"
                  },
                  "text": "Heating"
                },
                "type": "ia.display.label"
              },
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\tself.parent.updateParams(\u0027other\u0027)"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "Other"
                },
                "position": {
                  "basis": "14.29%",
                  "grow": 1
                },
                "propConfig": {
                  "props.style.backgroundColor": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.type}\u003d\u0027other\u0027,\u0027--neutral-100\u0027,\u0027--neutral-10\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.color": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.type}\u003d\u0027other\u0027,\u0027--neutral-10\u0027,\u0027--neutral-90\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.cursor": {
                    "binding": {
                      "config": {
                        "expression": "if({view.params.currentParams.type}\u003d\u0027other\u0027,\u0027auto\u0027,\u0027pointer\u0027)"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "style": {
                    "fontSize": "12px",
                    "textAlign": "center"
                  },
                  "text": "Other"
                },
                "type": "ia.display.label"
              }
            ],
            "meta": {
              "name": "Unit Options"
            },
            "position": {
              "basis": "35px"
            },
            "props": {
              "justify": "space-evenly",
              "style": {
                "borderColor": "--neutral-80",
                "borderStyle": "solid",
                "borderWidth": 1,
                "marginTop": "10px"
              }
            },
            "scripts": {
              "customMethods": [
                {
                  "name": "updateParams",
                  "params": [
                    "type"
                  ],
                  "script": "\t# Update the type param, and clear out other params (if needed).\n\t\n\tself.view.params.currentParams.type \u003d type\n\t\n\tif len(self.view.params.currentParams.path) \u003e 0:\n\t\tself.view.params.currentParams.path \u003d \u0027\u0027\n\t\t\n\tif self.view.params.currentParams.lowThreshold !\u003d \u0027\u0027:\n\t\tself.view.params.currentParams.lowThreshold \u003d \u0027\u0027\n\t\t\n\tif self.view.params.currentParams.highThreshold !\u003d \u0027\u0027:\n\t\tself.view.params.currentParams.highThreshold \u003d \u0027\u0027\n\t\t\n\tif self.view.params.currentParams.units !\u003d \u0027\u0027:\n\t\tself.view.params.currentParams.units \u003d \u0027\u0027\n\t\t\n\tif len(self.view.params.currentParams.mappings) \u003e 0:\n\t\tself.view.params.currentParams.mappings \u003d []\n\t\n\tif self.view.params.currentParams.numberFormat !\u003d \u0027\u0027:\n\t\tself.view.params.currentParams.numberFormat \u003d \u0027\u0027\n\t\t\n\tif self.view.params.currentParams.name !\u003d \u0027\u0027:\n\t\tself.view.params.currentParams.name \u003d \u0027\u0027\n\t\t\t\n\tif self.view.params.currentParams.compressor !\u003d -1:\n\t\tself.view.params.currentParams.compressor \u003d -1"
                }
              ],
              "extensionFunctions": null,
              "messageHandlers": []
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "Unit"
        },
        "position": {
          "basis": "60px"
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "{view.params.currentParams.ac} \u003e -1 \u0026\u0026 {view.params.currentParams.ac} !\u003d 3"
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "direction": "column",
          "style": {
            "marginTop": "35px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Title"
            },
            "props": {
              "style": {
                "fontSize": "15px",
                "white-space": "nowrap"
              },
              "text": "Tag"
            },
            "type": "ia.display.label"
          },
          {
            "meta": {
              "name": "Tag"
            },
            "position": {
              "basis": "36px"
            },
            "propConfig": {
              "props.value": {
                "binding": {
                  "config": {
                    "bidirectional": true,
                    "path": "view.params.currentParams.path"
                  },
                  "type": "property"
                },
                "onChange": {
                  "enabled": null,
                  "script": "\t# The user has selected a tag. Utilize the selected tag path to find the \n\t# tag in the options list, grab the tag properties, and set the params\n\t# equal to the tag properties.\t\n\t\n\tif origin !\u003d \u0027Binding\u0027:\n\t\tselectedPath \u003d currentValue.value\n\t\toptions \u003d self.props.options\n\t\t\n\t\tfor option in options:\n\t\t\tif option[\u0027value\u0027] \u003d\u003d selectedPath:\n\t\t\t\tlabel \u003d option[\u0027label\u0027]\n\t\t\t\tunits \u003d option[\u0027units\u0027]\n\t\t\t\tmappings \u003d option[\u0027mappings\u0027]\n\t\t\t\tnumberFormat \u003d option[\u0027numberFormat\u0027]\n\t\t\t\teditable \u003d option[\u0027editable\u0027]\n\t\t\t\t\n\t\t\t\tself.view.params.currentParams.name \u003d label\n\t\t\t\tself.view.params.currentParams.units \u003d units\n\t\t\t\tself.view.params.currentParams.mappings \u003d mappings\n\t\t\t\tself.view.params.currentParams.numberFormat \u003d numberFormat\n\t\t\t\tself.view.params.currentParams.editable \u003d editable\n\t\t\t\t\n\t\t\t\tbreak"
                }
              }
            },
            "props": {
              "style": {
                "backgroundColor": "--neutral-10",
                "borderBottomStyle": "solid",
                "borderLeftStyle": "none",
                "borderRightStyle": "none",
                "borderTopStyle": "none",
                "fontSize": "15px",
                "outlineStyle": "none"
              }
            },
            "type": "ia.input.dropdown"
          }
        ],
        "meta": {
          "name": "Tag"
        },
        "position": {
          "basis": "60px"
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "struct": {
                  "ac": "{view.params.currentParams.ac}",
                  "type": "{view.params.currentParams.type}"
                },
                "waitOnAll": true
              },
              "transforms": [
                {
                  "code": "\t# Only display the tag dropdown if the AC (AHU) param is equal to 1 or 2 and\n\t# the type param is greater than 0, or if the AC (AHU) param is equal to 3\n\t# (other).\n\t\n\tac \u003d value[\u0027ac\u0027]\n\ttype \u003d value[\u0027type\u0027]\n\t\n\tif ac in [1,2] and type \u003e 0:\n\t\treturn True\n\telif ac \u003d\u003d 3:\n\t\treturn True\n\telse:\n\t\treturn False",
                  "type": "script"
                }
              ],
              "type": "expr-struct"
            }
          }
        },
        "props": {
          "direction": "column",
          "style": {
            "marginTop": "35px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Title"
            },
            "props": {
              "style": {
                "fontSize": "15px",
                "white-space": "nowrap"
              },
              "text": "Compressor Number"
            },
            "type": "ia.display.label"
          },
          {
            "children": [
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\tself.parent.parent.parent.getChild(\"Compressor Number\").custom.currCompressor \u003d 1"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "Comp1"
                },
                "position": {
                  "grow": 1
                },
                "propConfig": {
                  "props.style.backgroundColor": {
                    "binding": {
                      "config": {
                        "expression": "if({..../Compressor Number.custom.currCompressor}\u003d1,\u0027--neutral-100\u0027,\u0027--neutral-10\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.color": {
                    "binding": {
                      "config": {
                        "expression": "if({..../Compressor Number.custom.currCompressor}\u003d1,\u0027--neutral-10\u0027,\u0027--neutral-90\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.cursor": {
                    "binding": {
                      "config": {
                        "expression": "if({..../Compressor Number.custom.currCompressor}\u003d1,\u0027auto\u0027,\u0027pointer\u0027)"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "style": {
                    "borderRightColor": "--neutral-80",
                    "borderRightStyle": "solid",
                    "borderRightWidth": 1,
                    "fontSize": "13px",
                    "textAlign": "center"
                  },
                  "text": 1
                },
                "type": "ia.display.label"
              },
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\tself.parent.parent.parent.getChild(\"Compressor Number\").custom.currCompressor \u003d 2"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "Comp2"
                },
                "position": {
                  "grow": 1
                },
                "propConfig": {
                  "props.style.backgroundColor": {
                    "binding": {
                      "config": {
                        "expression": "if({..../Compressor Number.custom.currCompressor}\u003d2,\u0027--neutral-100\u0027,\u0027--neutral-10\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.color": {
                    "binding": {
                      "config": {
                        "expression": "if({..../Compressor Number.custom.currCompressor}\u003d2,\u0027--neutral-10\u0027,\u0027--neutral-90\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.cursor": {
                    "binding": {
                      "config": {
                        "expression": "if({..../Compressor Number.custom.currCompressor}\u003d2,\u0027auto\u0027,\u0027pointer\u0027)"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "style": {
                    "borderRightColor": "--neutral-80",
                    "borderRightStyle": "solid",
                    "borderRightWidth": 1,
                    "fontSize": "13px",
                    "textAlign": "center"
                  },
                  "text": 2
                },
                "type": "ia.display.label"
              },
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\tself.parent.parent.parent.getChild(\"Compressor Number\").custom.currCompressor \u003d 3"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "Comp3"
                },
                "position": {
                  "grow": 1
                },
                "propConfig": {
                  "props.style.backgroundColor": {
                    "binding": {
                      "config": {
                        "expression": "if({..../Compressor Number.custom.currCompressor}\u003d3,\u0027--neutral-100\u0027,\u0027--neutral-10\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.color": {
                    "binding": {
                      "config": {
                        "expression": "if({..../Compressor Number.custom.currCompressor}\u003d3,\u0027--neutral-10\u0027,\u0027--neutral-90\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.cursor": {
                    "binding": {
                      "config": {
                        "expression": "if({..../Compressor Number.custom.currCompressor}\u003d3,\u0027auto\u0027,\u0027pointer\u0027)"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "style": {
                    "borderRightColor": "--neutral-80",
                    "borderRightStyle": "solid",
                    "borderRightWidth": 1,
                    "fontSize": "13px",
                    "textAlign": "center"
                  },
                  "text": 3
                },
                "type": "ia.display.label"
              },
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\tself.parent.parent.parent.getChild(\"Compressor Number\").custom.currCompressor \u003d 4"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "Comp4"
                },
                "position": {
                  "grow": 1
                },
                "propConfig": {
                  "props.style.backgroundColor": {
                    "binding": {
                      "config": {
                        "expression": "if({..../Compressor Number.custom.currCompressor}\u003d4,\u0027--neutral-100\u0027,\u0027--neutral-10\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.color": {
                    "binding": {
                      "config": {
                        "expression": "if({..../Compressor Number.custom.currCompressor}\u003d4,\u0027--neutral-10\u0027,\u0027--neutral-90\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.cursor": {
                    "binding": {
                      "config": {
                        "expression": "if({..../Compressor Number.custom.currCompressor}\u003d4,\u0027auto\u0027,\u0027pointer\u0027)"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "style": {
                    "borderRightColor": "--neutral-80",
                    "borderRightStyle": "solid",
                    "borderRightWidth": 1,
                    "fontSize": "13px",
                    "textAlign": "center"
                  },
                  "text": 4
                },
                "type": "ia.display.label"
              },
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\tself.parent.parent.parent.getChild(\"Compressor Number\").custom.currCompressor \u003d 5"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "Comp5"
                },
                "position": {
                  "grow": 1
                },
                "propConfig": {
                  "position.display": {
                    "binding": {
                      "config": {
                        "expression": "{view.params.currentParams.ac}\u003d1"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.backgroundColor": {
                    "binding": {
                      "config": {
                        "expression": "if({..../Compressor Number.custom.currCompressor}\u003d5,\u0027--neutral-100\u0027,\u0027--neutral-10\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.color": {
                    "binding": {
                      "config": {
                        "expression": "if({..../Compressor Number.custom.currCompressor}\u003d5,\u0027--neutral-10\u0027,\u0027--neutral-90\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.cursor": {
                    "binding": {
                      "config": {
                        "expression": "if({..../Compressor Number.custom.currCompressor}\u003d5,\u0027auto\u0027,\u0027pointer\u0027)"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "style": {
                    "borderRightColor": "--neutral-80",
                    "borderRightStyle": "solid",
                    "borderRightWidth": 1,
                    "fontSize": "13px",
                    "textAlign": "center"
                  },
                  "text": 5
                },
                "type": "ia.display.label"
              },
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\tself.parent.parent.parent.getChild(\"Compressor Number\").custom.currCompressor \u003d 6"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "Comp6"
                },
                "position": {
                  "grow": 1
                },
                "propConfig": {
                  "position.display": {
                    "binding": {
                      "config": {
                        "expression": "{view.params.currentParams.ac}\u003d1"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.backgroundColor": {
                    "binding": {
                      "config": {
                        "expression": "if({..../Compressor Number.custom.currCompressor}\u003d6,\u0027--neutral-100\u0027,\u0027--neutral-10\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.color": {
                    "binding": {
                      "config": {
                        "expression": "if({..../Compressor Number.custom.currCompressor}\u003d6,\u0027--neutral-10\u0027,\u0027--neutral-90\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.cursor": {
                    "binding": {
                      "config": {
                        "expression": "if({..../Compressor Number.custom.currCompressor}\u003d6,\u0027auto\u0027,\u0027pointer\u0027)"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "style": {
                    "borderRightColor": "--neutral-80",
                    "borderRightStyle": "solid",
                    "borderRightWidth": 1,
                    "fontSize": "13px",
                    "textAlign": "center"
                  },
                  "text": 6
                },
                "type": "ia.display.label"
              },
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\tself.parent.parent.parent.getChild(\"Compressor Number\").custom.currCompressor \u003d 7"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "Comp7"
                },
                "position": {
                  "grow": 1
                },
                "propConfig": {
                  "position.display": {
                    "binding": {
                      "config": {
                        "expression": "{view.params.currentParams.ac}\u003d1"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.backgroundColor": {
                    "binding": {
                      "config": {
                        "expression": "if({..../Compressor Number.custom.currCompressor}\u003d7,\u0027--neutral-100\u0027,\u0027--neutral-10\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.color": {
                    "binding": {
                      "config": {
                        "expression": "if({..../Compressor Number.custom.currCompressor}\u003d7,\u0027--neutral-10\u0027,\u0027--neutral-90\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.cursor": {
                    "binding": {
                      "config": {
                        "expression": "if({..../Compressor Number.custom.currCompressor}\u003d7,\u0027auto\u0027,\u0027pointer\u0027)"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "style": {
                    "borderRightColor": "--neutral-80",
                    "borderRightStyle": "solid",
                    "borderRightWidth": 1,
                    "fontSize": "13px",
                    "textAlign": "center"
                  },
                  "text": 7
                },
                "type": "ia.display.label"
              },
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\tself.parent.parent.parent.getChild(\"Compressor Number\").custom.currCompressor \u003d 8"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "Comp8"
                },
                "position": {
                  "grow": 1
                },
                "propConfig": {
                  "position.display": {
                    "binding": {
                      "config": {
                        "expression": "{view.params.currentParams.ac}\u003d1"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.backgroundColor": {
                    "binding": {
                      "config": {
                        "expression": "if({..../Compressor Number.custom.currCompressor}\u003d8,\u0027--neutral-100\u0027,\u0027--neutral-10\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.color": {
                    "binding": {
                      "config": {
                        "expression": "if({..../Compressor Number.custom.currCompressor}\u003d8,\u0027--neutral-10\u0027,\u0027--neutral-90\u0027)"
                      },
                      "type": "expr"
                    }
                  },
                  "props.style.cursor": {
                    "binding": {
                      "config": {
                        "expression": "if({..../Compressor Number.custom.currCompressor}\u003d8,\u0027auto\u0027,\u0027pointer\u0027)"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "style": {
                    "fontSize": "13px",
                    "textAlign": "center"
                  },
                  "text": 8
                },
                "type": "ia.display.label"
              }
            ],
            "meta": {
              "name": "Compressor Options"
            },
            "position": {
              "basis": "35px"
            },
            "props": {
              "justify": "space-evenly",
              "style": {
                "borderColor": "--neutral-80",
                "borderStyle": "solid",
                "borderWidth": 1,
                "marginTop": "10px"
              }
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "Compressor Number"
        },
        "position": {
          "basis": "60px"
        },
        "propConfig": {
          "custom.currCompressor": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.params.currentParams.compressor"
              },
              "type": "property"
            }
          },
          "position.display": {
            "binding": {
              "config": {
                "path": "view.params.currentParams.path"
              },
              "transforms": [
                {
                  "code": "\t# Only ask the user to select a compressor number if \u0027Comp\u0027 is\n\t# in the tag path.\t\n\t\n\tif \u0027Comp\u0027 in value:\n\t\treturn True\n\telse:\n\t\treturn False",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "direction": "column",
          "style": {
            "marginTop": "35px"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "children": [
              {
                "meta": {
                  "name": "Label"
                },
                "props": {
                  "style": {
                    "color": "--neutral-100",
                    "fontSize": "16px",
                    "white-space": "nowrap"
                  },
                  "text": "Low Threshold"
                },
                "type": "ia.display.label"
              }
            ],
            "meta": {
              "name": "Title"
            },
            "props": {
              "style": {
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\tself.view.params.currentParams.lowThreshold \u003d 0"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Use Low Threshold"
            },
            "position": {
              "basis": "20px"
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "path": "view.params.currentParams.lowThreshold"
                  },
                  "transforms": [
                    {
                      "code": "\t# If lowThreshold is not a number, then lowThreshold is not being used,\n\t# so display this button (allows user to utilize a lowThreshold).\t\n\t\n\timport numbers\n\t\t\n\tif isinstance(value,numbers.Number):\n\t\treturn False\n\telse:\n\t\treturn True",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "style": {
                "backgroundColor": "--neutral-10",
                "borderColor": "--neutral-80",
                "borderStyle": "solid",
                "borderWidth": 1,
                "color": "--neutral-90",
                "cursor": "pointer",
                "fontSize": "13px",
                "marginRight": "60%",
                "marginTop": "10px",
                "textAlign": "center",
                "white-space": "nowrap"
              },
              "text": "Use Low Threshold"
            },
            "type": "ia.display.label"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "Low Threshold"
                },
                "position": {
                  "grow": 1
                },
                "propConfig": {
                  "props.value": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.params.currentParams.lowThreshold"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "align": "left",
                  "style": {
                    "backgroundColor": "--neutral-10",
                    "borderBottomStyle": "solid",
                    "borderLeftStyle": "none",
                    "borderRightStyle": "none",
                    "borderTopStyle": "none",
                    "fontSize": "15px",
                    "outlineStyle": "none"
                  }
                },
                "type": "ia.input.numeric-entry-field"
              },
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\tself.view.params.currentParams.lowThreshold \u003d \u0027\u0027"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "Remove Low Threshold",
                  "tooltip": {
                    "enabled": true,
                    "style": {
                      "backgroundColor": "var(--neutral-30)",
                      "color": "var(--neutral-90)"
                    },
                    "text": "REMOVE LOW THRESHOLD"
                  }
                },
                "position": {
                  "basis": "25px"
                },
                "props": {
                  "elements": [
                    {
                      "d": "M0 0h24v24H0V0z",
                      "fill": {
                        "paint": "none"
                      },
                      "name": "path",
                      "type": "path"
                    },
                    {
                      "d": "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z",
                      "name": "path",
                      "type": "path"
                    }
                  ],
                  "fill": "var(--neutral-100)",
                  "style": {
                    "cursor": "pointer",
                    "marginLeft": "15px"
                  },
                  "viewBox": "0 0 24 24"
                },
                "type": "ia.shapes.svg"
              }
            ],
            "meta": {
              "name": "Low Threshold"
            },
            "position": {
              "grow": 1
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "path": "view.params.currentParams.lowThreshold"
                  },
                  "transforms": [
                    {
                      "code": "\t# If lowThreshold is a number, then lowThreshold is being used,\n\t# so display this container (displays current lowThreshold).\t\n\t\n\timport numbers\n\t\t\n\tif isinstance(value,numbers.Number):\n\t\treturn True\n\telse:\n\t\treturn False",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "style": {
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "Low Threshold"
        },
        "position": {
          "basis": "60px"
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "struct": {
                  "mappings": "{view.params.currentParams.mappings}",
                  "typeAndPath": "({view.params.currentParams.type} !\u003d \u0027\u0027 \u0026\u0026 len({view.params.currentParams.path}) \u003e 0)\r\n|| (len({view.params.currentParams.path}) \u003e 0 \u0026\u0026 {view.params.currentParams.ac}\u003d3)"
                },
                "waitOnAll": true
              },
              "transforms": [
                {
                  "code": "\t# If the selected tag contains a mapping, then it is not possible to utilize\n\t# a low threshold (so, do not display this container).\n\t\n\tmappings \u003d value[\u0027mappings\u0027]\n\ttypeAndPath \u003d value[\u0027typeAndPath\u0027]\n\t\n\tif typeAndPath \u003d\u003d True:\n\t\tif len(mappings) \u003e 0:\n\t\t\treturn False\n\t\telse:\n\t\t\treturn True\n\telse:\n\t\treturn False",
                  "type": "script"
                }
              ],
              "type": "expr-struct"
            }
          }
        },
        "props": {
          "direction": "column",
          "style": {
            "marginTop": "35px",
            "overflow": "hidden"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "children": [
              {
                "meta": {
                  "name": "Label"
                },
                "props": {
                  "style": {
                    "color": "--neutral-100",
                    "fontSize": "16px",
                    "white-space": "nowrap"
                  },
                  "text": "High Threshold"
                },
                "type": "ia.display.label"
              }
            ],
            "meta": {
              "name": "Title"
            },
            "props": {
              "style": {
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\tself.view.params.currentParams.highThreshold \u003d 0"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Use High Threshold"
            },
            "position": {
              "basis": "20px"
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "path": "view.params.currentParams.highThreshold"
                  },
                  "transforms": [
                    {
                      "code": "\t# If highThreshold is not a number, then highThreshold is not being used,\n\t# so display this button (allows user to utilize a highThreshold).\t\n\t\n\timport numbers\n\t\t\n\tif isinstance(value,numbers.Number):\n\t\treturn False\n\telse:\n\t\treturn True",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "style": {
                "backgroundColor": "--neutral-10",
                "borderColor": "--neutral-80",
                "borderStyle": "solid",
                "borderWidth": 1,
                "color": "--neutral-90",
                "cursor": "pointer",
                "fontSize": "13px",
                "marginRight": "60%",
                "marginTop": "10px",
                "textAlign": "center",
                "white-space": "nowrap"
              },
              "text": "Use High Threshold"
            },
            "type": "ia.display.label"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "High Threshold"
                },
                "position": {
                  "grow": 1
                },
                "propConfig": {
                  "props.value": {
                    "binding": {
                      "config": {
                        "bidirectional": true,
                        "path": "view.params.currentParams.highThreshold"
                      },
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "align": "left",
                  "style": {
                    "backgroundColor": "--neutral-10",
                    "borderBottomStyle": "solid",
                    "borderLeftStyle": "none",
                    "borderRightStyle": "none",
                    "borderTopStyle": "none",
                    "fontSize": "15px",
                    "outlineStyle": "none"
                  }
                },
                "type": "ia.input.numeric-entry-field"
              },
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\tself.view.params.currentParams.highThreshold \u003d \u0027\u0027"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "Remove High Threshold",
                  "tooltip": {
                    "enabled": true,
                    "style": {
                      "backgroundColor": "var(--neutral-30)",
                      "color": "var(--neutral-90)"
                    },
                    "text": "REMOVE HIGH THRESHOLD"
                  }
                },
                "position": {
                  "basis": "25px"
                },
                "props": {
                  "elements": [
                    {
                      "d": "M0 0h24v24H0V0z",
                      "fill": {
                        "paint": "none"
                      },
                      "name": "path",
                      "type": "path"
                    },
                    {
                      "d": "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z",
                      "name": "path",
                      "type": "path"
                    }
                  ],
                  "fill": "var(--neutral-100)",
                  "style": {
                    "cursor": "pointer",
                    "marginLeft": "15px"
                  },
                  "viewBox": "0 0 24 24"
                },
                "type": "ia.shapes.svg"
              }
            ],
            "meta": {
              "name": "High Threshold"
            },
            "position": {
              "grow": 1
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "path": "view.params.currentParams.highThreshold"
                  },
                  "transforms": [
                    {
                      "code": "\t# If highThreshold is a number, then highThreshold is being used,\n\t# so display this container (displays current highThreshold).\t\n\t\n\timport numbers\n\t\t\n\tif isinstance(value,numbers.Number):\n\t\treturn True\n\telse:\n\t\treturn False",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "style": {
                "overflow": "hidden"
              }
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "High Threshold"
        },
        "position": {
          "basis": "60px"
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "struct": {
                  "mappings": "{view.params.currentParams.mappings}",
                  "typeAndPath": "({view.params.currentParams.type} !\u003d \u0027\u0027 \u0026\u0026 len({view.params.currentParams.path}) \u003e 0)\r\n|| (len({view.params.currentParams.path}) \u003e 0 \u0026\u0026 {view.params.currentParams.ac}\u003d3)"
                },
                "waitOnAll": true
              },
              "transforms": [
                {
                  "code": "\t# If the selected tag contains a mapping, then it is not possible to utilize\n\t# a high threshold (so, do not display this container).\n\t\n\tmappings \u003d value[\u0027mappings\u0027]\n\ttypeAndPath \u003d value[\u0027typeAndPath\u0027]\n\t\n\tif typeAndPath \u003d\u003d True:\n\t\tif len(mappings) \u003e 0:\n\t\t\treturn False\n\t\telse:\n\t\t\treturn True\n\telse:\n\t\treturn False",
                  "type": "script"
                }
              ],
              "type": "expr-struct"
            }
          }
        },
        "props": {
          "direction": "column",
          "style": {
            "marginTop": "35px",
            "overflow": "hidden"
          }
        },
        "type": "ia.container.flex"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "alignContent": "flex-start",
      "direction": "column",
      "style": {
        "backgroundColor": "--neutral-10",
        "padding": "15px"
      }
    },
    "scripts": {
      "customMethods": [],
      "extensionFunctions": null,
      "messageHandlers": [
        {
          "messageType": "updateIcon",
          "pageScope": true,
          "script": "\t# When the icon is updated via the \u0027select icon\u0027 popup, this\n\t# handler receives a message containing the icon in the\n\t# payload; then this updates the current icon.\n\t\n\ticon \u003d payload[\u0027icon\u0027]\n\t\n\tself.getChild(\"Icon\").getChild(\"Icon Cont\").custom.icon \u003d icon",
          "sessionScope": false,
          "viewScope": false
        }
      ]
    },
    "type": "ia.container.flex"
  }
}